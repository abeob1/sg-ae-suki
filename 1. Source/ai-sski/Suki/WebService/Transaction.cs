//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.8009
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data;
using System.Diagnostics;
using System.Web.Services;
using System.Web.Services.Protocols;
using System.Xml.Serialization;

// 
// This source code was auto-generated by wsdl, Version=2.0.50727.3038.
// 


/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Web.Services.WebServiceBindingAttribute(Name="TransactionSoap", Namespace="http://tempuri.org/")]
public partial class Transaction : System.Web.Services.Protocols.SoapHttpClientProtocol {
    
    private System.Threading.SendOrPostCallback RemoveMarketingDocumentLineOperationCompleted;
    
    private System.Threading.SendOrPostCallback CreateMarketingDocumentOperationCompleted;
    
    private System.Threading.SendOrPostCallback ClosePODraftOperationCompleted;
    
    private System.Threading.SendOrPostCallback CloseCancelPOOperationCompleted;
    
    private System.Threading.SendOrPostCallback CreateMarketingDocumentDynamicOperationCompleted;
    
    private System.Threading.SendOrPostCallback CreateMarketingDocumentDebugOperationCompleted;
    
    /// <remarks/>
    public Transaction() {
        this.Url = "http://localhost:49310/Transaction.asmx";
    }
    
    /// <remarks/>
    public event RemoveMarketingDocumentLineCompletedEventHandler RemoveMarketingDocumentLineCompleted;
    
    /// <remarks/>
    public event CreateMarketingDocumentCompletedEventHandler CreateMarketingDocumentCompleted;
    
    /// <remarks/>
    public event ClosePODraftCompletedEventHandler ClosePODraftCompleted;
    
    /// <remarks/>
    public event CloseCancelPOCompletedEventHandler CloseCancelPOCompleted;
    
    /// <remarks/>
    public event CreateMarketingDocumentDynamicCompletedEventHandler CreateMarketingDocumentDynamicCompleted;
    
    /// <remarks/>
    public event CreateMarketingDocumentDebugCompletedEventHandler CreateMarketingDocumentDebugCompleted;
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RemoveMarketingDocumentLine", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Data.DataSet RemoveMarketingDocumentLine(System.Data.DataSet dsUpdate, string userId, string passWord, string databaseName, string DocType, string Key) {
        object[] results = this.Invoke("RemoveMarketingDocumentLine", new object[] {
                    dsUpdate,
                    userId,
                    passWord,
                    databaseName,
                    DocType,
                    Key});
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginRemoveMarketingDocumentLine(System.Data.DataSet dsUpdate, string userId, string passWord, string databaseName, string DocType, string Key, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("RemoveMarketingDocumentLine", new object[] {
                    dsUpdate,
                    userId,
                    passWord,
                    databaseName,
                    DocType,
                    Key}, callback, asyncState);
    }
    
    /// <remarks/>
    public System.Data.DataSet EndRemoveMarketingDocumentLine(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public void RemoveMarketingDocumentLineAsync(System.Data.DataSet dsUpdate, string userId, string passWord, string databaseName, string DocType, string Key) {
        this.RemoveMarketingDocumentLineAsync(dsUpdate, userId, passWord, databaseName, DocType, Key, null);
    }
    
    /// <remarks/>
    public void RemoveMarketingDocumentLineAsync(System.Data.DataSet dsUpdate, string userId, string passWord, string databaseName, string DocType, string Key, object userState) {
        if ((this.RemoveMarketingDocumentLineOperationCompleted == null)) {
            this.RemoveMarketingDocumentLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveMarketingDocumentLineOperationCompleted);
        }
        this.InvokeAsync("RemoveMarketingDocumentLine", new object[] {
                    dsUpdate,
                    userId,
                    passWord,
                    databaseName,
                    DocType,
                    Key}, this.RemoveMarketingDocumentLineOperationCompleted, userState);
    }
    
    private void OnRemoveMarketingDocumentLineOperationCompleted(object arg) {
        if ((this.RemoveMarketingDocumentLineCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.RemoveMarketingDocumentLineCompleted(this, new RemoveMarketingDocumentLineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreateMarketingDocument", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Data.DataSet CreateMarketingDocument(string strXml, string userId, string passWord, string databaseName, string DocType, string Key, bool IsUpdate) {
        object[] results = this.Invoke("CreateMarketingDocument", new object[] {
                    strXml,
                    userId,
                    passWord,
                    databaseName,
                    DocType,
                    Key,
                    IsUpdate});
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginCreateMarketingDocument(string strXml, string userId, string passWord, string databaseName, string DocType, string Key, bool IsUpdate, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("CreateMarketingDocument", new object[] {
                    strXml,
                    userId,
                    passWord,
                    databaseName,
                    DocType,
                    Key,
                    IsUpdate}, callback, asyncState);
    }
    
    /// <remarks/>
    public System.Data.DataSet EndCreateMarketingDocument(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public void CreateMarketingDocumentAsync(string strXml, string userId, string passWord, string databaseName, string DocType, string Key, bool IsUpdate) {
        this.CreateMarketingDocumentAsync(strXml, userId, passWord, databaseName, DocType, Key, IsUpdate, null);
    }
    
    /// <remarks/>
    public void CreateMarketingDocumentAsync(string strXml, string userId, string passWord, string databaseName, string DocType, string Key, bool IsUpdate, object userState) {
        if ((this.CreateMarketingDocumentOperationCompleted == null)) {
            this.CreateMarketingDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateMarketingDocumentOperationCompleted);
        }
        this.InvokeAsync("CreateMarketingDocument", new object[] {
                    strXml,
                    userId,
                    passWord,
                    databaseName,
                    DocType,
                    Key,
                    IsUpdate}, this.CreateMarketingDocumentOperationCompleted, userState);
    }
    
    private void OnCreateMarketingDocumentOperationCompleted(object arg) {
        if ((this.CreateMarketingDocumentCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.CreateMarketingDocumentCompleted(this, new CreateMarketingDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ClosePODraft", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string ClosePODraft(int docEntry, string databaseName) {
        object[] results = this.Invoke("ClosePODraft", new object[] {
                    docEntry,
                    databaseName});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginClosePODraft(int docEntry, string databaseName, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("ClosePODraft", new object[] {
                    docEntry,
                    databaseName}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndClosePODraft(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void ClosePODraftAsync(int docEntry, string databaseName) {
        this.ClosePODraftAsync(docEntry, databaseName, null);
    }
    
    /// <remarks/>
    public void ClosePODraftAsync(int docEntry, string databaseName, object userState) {
        if ((this.ClosePODraftOperationCompleted == null)) {
            this.ClosePODraftOperationCompleted = new System.Threading.SendOrPostCallback(this.OnClosePODraftOperationCompleted);
        }
        this.InvokeAsync("ClosePODraft", new object[] {
                    docEntry,
                    databaseName}, this.ClosePODraftOperationCompleted, userState);
    }
    
    private void OnClosePODraftOperationCompleted(object arg) {
        if ((this.ClosePODraftCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.ClosePODraftCompleted(this, new ClosePODraftCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CloseCancelPO", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string CloseCancelPO(int docEntry, string databaseName, bool isCancel, bool isDraft) {
        object[] results = this.Invoke("CloseCancelPO", new object[] {
                    docEntry,
                    databaseName,
                    isCancel,
                    isDraft});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginCloseCancelPO(int docEntry, string databaseName, bool isCancel, bool isDraft, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("CloseCancelPO", new object[] {
                    docEntry,
                    databaseName,
                    isCancel,
                    isDraft}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndCloseCancelPO(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void CloseCancelPOAsync(int docEntry, string databaseName, bool isCancel, bool isDraft) {
        this.CloseCancelPOAsync(docEntry, databaseName, isCancel, isDraft, null);
    }
    
    /// <remarks/>
    public void CloseCancelPOAsync(int docEntry, string databaseName, bool isCancel, bool isDraft, object userState) {
        if ((this.CloseCancelPOOperationCompleted == null)) {
            this.CloseCancelPOOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCloseCancelPOOperationCompleted);
        }
        this.InvokeAsync("CloseCancelPO", new object[] {
                    docEntry,
                    databaseName,
                    isCancel,
                    isDraft}, this.CloseCancelPOOperationCompleted, userState);
    }
    
    private void OnCloseCancelPOOperationCompleted(object arg) {
        if ((this.CloseCancelPOCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.CloseCancelPOCompleted(this, new CloseCancelPOCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreateMarketingDocumentDynamic", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Data.DataSet CreateMarketingDocumentDynamic(string strXml, string DatabaseName, string SAPUser, string SAPPwd, string SQLServer, string SQLUser, string SQLPwd, string SAPServer, string ServerType, string DocType, string Key, bool IsUpdate) {
        object[] results = this.Invoke("CreateMarketingDocumentDynamic", new object[] {
                    strXml,
                    DatabaseName,
                    SAPUser,
                    SAPPwd,
                    SQLServer,
                    SQLUser,
                    SQLPwd,
                    SAPServer,
                    ServerType,
                    DocType,
                    Key,
                    IsUpdate});
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginCreateMarketingDocumentDynamic(string strXml, string DatabaseName, string SAPUser, string SAPPwd, string SQLServer, string SQLUser, string SQLPwd, string SAPServer, string ServerType, string DocType, string Key, bool IsUpdate, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("CreateMarketingDocumentDynamic", new object[] {
                    strXml,
                    DatabaseName,
                    SAPUser,
                    SAPPwd,
                    SQLServer,
                    SQLUser,
                    SQLPwd,
                    SAPServer,
                    ServerType,
                    DocType,
                    Key,
                    IsUpdate}, callback, asyncState);
    }
    
    /// <remarks/>
    public System.Data.DataSet EndCreateMarketingDocumentDynamic(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public void CreateMarketingDocumentDynamicAsync(string strXml, string DatabaseName, string SAPUser, string SAPPwd, string SQLServer, string SQLUser, string SQLPwd, string SAPServer, string ServerType, string DocType, string Key, bool IsUpdate) {
        this.CreateMarketingDocumentDynamicAsync(strXml, DatabaseName, SAPUser, SAPPwd, SQLServer, SQLUser, SQLPwd, SAPServer, ServerType, DocType, Key, IsUpdate, null);
    }
    
    /// <remarks/>
    public void CreateMarketingDocumentDynamicAsync(string strXml, string DatabaseName, string SAPUser, string SAPPwd, string SQLServer, string SQLUser, string SQLPwd, string SAPServer, string ServerType, string DocType, string Key, bool IsUpdate, object userState) {
        if ((this.CreateMarketingDocumentDynamicOperationCompleted == null)) {
            this.CreateMarketingDocumentDynamicOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateMarketingDocumentDynamicOperationCompleted);
        }
        this.InvokeAsync("CreateMarketingDocumentDynamic", new object[] {
                    strXml,
                    DatabaseName,
                    SAPUser,
                    SAPPwd,
                    SQLServer,
                    SQLUser,
                    SQLPwd,
                    SAPServer,
                    ServerType,
                    DocType,
                    Key,
                    IsUpdate}, this.CreateMarketingDocumentDynamicOperationCompleted, userState);
    }
    
    private void OnCreateMarketingDocumentDynamicOperationCompleted(object arg) {
        if ((this.CreateMarketingDocumentDynamicCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.CreateMarketingDocumentDynamicCompleted(this, new CreateMarketingDocumentDynamicCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreateMarketingDocumentDebug", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Data.DataSet CreateMarketingDocumentDebug(string strXml, string databaseName, string DocType, string Key, bool IsUpdate) {
        object[] results = this.Invoke("CreateMarketingDocumentDebug", new object[] {
                    strXml,
                    databaseName,
                    DocType,
                    Key,
                    IsUpdate});
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginCreateMarketingDocumentDebug(string strXml, string databaseName, string DocType, string Key, bool IsUpdate, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("CreateMarketingDocumentDebug", new object[] {
                    strXml,
                    databaseName,
                    DocType,
                    Key,
                    IsUpdate}, callback, asyncState);
    }
    
    /// <remarks/>
    public System.Data.DataSet EndCreateMarketingDocumentDebug(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public void CreateMarketingDocumentDebugAsync(string strXml, string databaseName, string DocType, string Key, bool IsUpdate) {
        this.CreateMarketingDocumentDebugAsync(strXml, databaseName, DocType, Key, IsUpdate, null);
    }
    
    /// <remarks/>
    public void CreateMarketingDocumentDebugAsync(string strXml, string databaseName, string DocType, string Key, bool IsUpdate, object userState) {
        if ((this.CreateMarketingDocumentDebugOperationCompleted == null)) {
            this.CreateMarketingDocumentDebugOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateMarketingDocumentDebugOperationCompleted);
        }
        this.InvokeAsync("CreateMarketingDocumentDebug", new object[] {
                    strXml,
                    databaseName,
                    DocType,
                    Key,
                    IsUpdate}, this.CreateMarketingDocumentDebugOperationCompleted, userState);
    }
    
    private void OnCreateMarketingDocumentDebugOperationCompleted(object arg) {
        if ((this.CreateMarketingDocumentDebugCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.CreateMarketingDocumentDebugCompleted(this, new CreateMarketingDocumentDebugCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    public new void CancelAsync(object userState) {
        base.CancelAsync(userState);
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void RemoveMarketingDocumentLineCompletedEventHandler(object sender, RemoveMarketingDocumentLineCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class RemoveMarketingDocumentLineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal RemoveMarketingDocumentLineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public System.Data.DataSet Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((System.Data.DataSet)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void CreateMarketingDocumentCompletedEventHandler(object sender, CreateMarketingDocumentCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class CreateMarketingDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal CreateMarketingDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public System.Data.DataSet Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((System.Data.DataSet)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void ClosePODraftCompletedEventHandler(object sender, ClosePODraftCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class ClosePODraftCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal ClosePODraftCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void CloseCancelPOCompletedEventHandler(object sender, CloseCancelPOCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class CloseCancelPOCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal CloseCancelPOCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void CreateMarketingDocumentDynamicCompletedEventHandler(object sender, CreateMarketingDocumentDynamicCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class CreateMarketingDocumentDynamicCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal CreateMarketingDocumentDynamicCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public System.Data.DataSet Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((System.Data.DataSet)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void CreateMarketingDocumentDebugCompletedEventHandler(object sender, CreateMarketingDocumentDebugCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class CreateMarketingDocumentDebugCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal CreateMarketingDocumentDebugCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public System.Data.DataSet Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((System.Data.DataSet)(this.results[0]));
        }
    }
}
