//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.8009
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data;
using System.Diagnostics;
using System.Web.Services;
using System.Web.Services.Protocols;
using System.Xml.Serialization;

// 
// This source code was auto-generated by wsdl, Version=2.0.50727.3038.
// 


/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Web.Services.WebServiceBindingAttribute(Name="MasterDataSoap", Namespace="http://electra-ai.com/")]
public partial class MasterData : System.Web.Services.Protocols.SoapHttpClientProtocol {
    
    private System.Threading.SendOrPostCallback UpdateStatusforEmailCheckOperationCompleted;
    
    private System.Threading.SendOrPostCallback SelectMaxIdofPOOperationCompleted;
    
    private System.Threading.SendOrPostCallback CreatePOOperationCompleted;
    
    private System.Threading.SendOrPostCallback UpdateSOOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetSODataOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetSODataByIdOperationCompleted;
    
    private System.Threading.SendOrPostCallback SearchSODataOperationCompleted;
    
    private System.Threading.SendOrPostCallback CheckCreatedSOSAPOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetPrefixOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetPONoOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetStockYearOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetAllABCompanyOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetAllABOutletOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetWareHouseAddressOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetABOutletByCompanyOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetABOutletByDataOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetInternalPOOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetCustomerCodeOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetOnlineUserOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetAllOutletOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetAllCompanyOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetCompanyInfoOperationCompleted;
    
    private System.Threading.SendOrPostCallback CheckPermissonDBOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetLoginOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetUserInfoOperationCompleted;
    
    private System.Threading.SendOrPostCallback LoginOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetOITMOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetOPOROperationCompleted;
    
    private System.Threading.SendOrPostCallback GetOCRDOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetPeronalContactOperationCompleted;
    
    private System.Threading.SendOrPostCallback CheckWhsCodeOperationCompleted;
    
    private System.Threading.SendOrPostCallback CheckProcessPOOperationCompleted;
    
    private System.Threading.SendOrPostCallback SearchPOOperationCompleted;
    
    private System.Threading.SendOrPostCallback GRPOSearchOperationCompleted;
    
    private System.Threading.SendOrPostCallback DraftStockTakeOperationCompleted;
    
    private System.Threading.SendOrPostCallback DraftPOOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetOutStandingPOOperationCompleted;
    
    private System.Threading.SendOrPostCallback CheckSlpNameOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetGRPOOperationCompleted;
    
    private System.Threading.SendOrPostCallback CheckOnHandOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetItemStockTakeOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetItemCumulativeOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetStockTakeListOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetStockTakeDraftDetailOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetStockTakeDetailOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetLastPurchasePriceOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetLogoOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetDefaultWareHouseOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetItemOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetAllItemOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetItemEditOperationCompleted;
    
    private System.Threading.SendOrPostCallback CopyToGRPOOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetGRPOUpdateOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetPODataUpdateOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetPODraftUpdateOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetOutletCalendarOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetOutletAmountOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetOutletSupplierOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetItemOutletSetupOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetSupplierOutletSetupOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetSupplierItemSetupOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetOutletItemListOperationCompleted;
    
    private System.Threading.SendOrPostCallback CheckAddPOOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetSupplierAmountOperationCompleted;
    
    private System.Threading.SendOrPostCallback UpdateOutletCalendarOperationCompleted;
    
    private System.Threading.SendOrPostCallback UpdateOutletOrderAmountOperationCompleted;
    
    private System.Threading.SendOrPostCallback UpdateOutletItemListOperationCompleted;
    
    private System.Threading.SendOrPostCallback InsertABDeliveryOrderOperationCompleted;
    
    private System.Threading.SendOrPostCallback DeleteVendorSetupOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetPOByDocEntryOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetRouteHoldingOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetDriverNoOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetBlockOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetSupplierSetupListOperationCompleted;
    
    private System.Threading.SendOrPostCallback ChangePasswordOperationCompleted;
    
    private System.Threading.SendOrPostCallback ReportStockTakeListOperationCompleted;
    
    private System.Threading.SendOrPostCallback ReportPurchaseOrderOperationCompleted;
    
    private System.Threading.SendOrPostCallback CopyTemplateOperationCompleted;
    
    private System.Threading.SendOrPostCallback UpdateXMLLogOperationCompleted;
    
    private System.Threading.SendOrPostCallback InsertPODetailsforEmailCheckOperationCompleted;
    
    /// <remarks/>
    public MasterData() {
        this.Url = "http://localhost:49310/MasterData.asmx";
    }
    
    /// <remarks/>
    public event UpdateStatusforEmailCheckCompletedEventHandler UpdateStatusforEmailCheckCompleted;
    
    /// <remarks/>
    public event SelectMaxIdofPOCompletedEventHandler SelectMaxIdofPOCompleted;
    
    /// <remarks/>
    public event CreatePOCompletedEventHandler CreatePOCompleted;
    
    /// <remarks/>
    public event UpdateSOCompletedEventHandler UpdateSOCompleted;
    
    /// <remarks/>
    public event GetSODataCompletedEventHandler GetSODataCompleted;
    
    /// <remarks/>
    public event GetSODataByIdCompletedEventHandler GetSODataByIdCompleted;
    
    /// <remarks/>
    public event SearchSODataCompletedEventHandler SearchSODataCompleted;
    
    /// <remarks/>
    public event CheckCreatedSOSAPCompletedEventHandler CheckCreatedSOSAPCompleted;
    
    /// <remarks/>
    public event GetPrefixCompletedEventHandler GetPrefixCompleted;
    
    /// <remarks/>
    public event GetPONoCompletedEventHandler GetPONoCompleted;
    
    /// <remarks/>
    public event GetStockYearCompletedEventHandler GetStockYearCompleted;
    
    /// <remarks/>
    public event GetAllABCompanyCompletedEventHandler GetAllABCompanyCompleted;
    
    /// <remarks/>
    public event GetAllABOutletCompletedEventHandler GetAllABOutletCompleted;
    
    /// <remarks/>
    public event GetWareHouseAddressCompletedEventHandler GetWareHouseAddressCompleted;
    
    /// <remarks/>
    public event GetABOutletByCompanyCompletedEventHandler GetABOutletByCompanyCompleted;
    
    /// <remarks/>
    public event GetABOutletByDataCompletedEventHandler GetABOutletByDataCompleted;
    
    /// <remarks/>
    public event GetInternalPOCompletedEventHandler GetInternalPOCompleted;
    
    /// <remarks/>
    public event GetCustomerCodeCompletedEventHandler GetCustomerCodeCompleted;
    
    /// <remarks/>
    public event GetOnlineUserCompletedEventHandler GetOnlineUserCompleted;
    
    /// <remarks/>
    public event GetAllOutletCompletedEventHandler GetAllOutletCompleted;
    
    /// <remarks/>
    public event GetAllCompanyCompletedEventHandler GetAllCompanyCompleted;
    
    /// <remarks/>
    public event GetCompanyInfoCompletedEventHandler GetCompanyInfoCompleted;
    
    /// <remarks/>
    public event CheckPermissonDBCompletedEventHandler CheckPermissonDBCompleted;
    
    /// <remarks/>
    public event GetLoginCompletedEventHandler GetLoginCompleted;
    
    /// <remarks/>
    public event GetUserInfoCompletedEventHandler GetUserInfoCompleted;
    
    /// <remarks/>
    public event LoginCompletedEventHandler LoginCompleted;
    
    /// <remarks/>
    public event GetOITMCompletedEventHandler GetOITMCompleted;
    
    /// <remarks/>
    public event GetOPORCompletedEventHandler GetOPORCompleted;
    
    /// <remarks/>
    public event GetOCRDCompletedEventHandler GetOCRDCompleted;
    
    /// <remarks/>
    public event GetPeronalContactCompletedEventHandler GetPeronalContactCompleted;
    
    /// <remarks/>
    public event CheckWhsCodeCompletedEventHandler CheckWhsCodeCompleted;
    
    /// <remarks/>
    public event CheckProcessPOCompletedEventHandler CheckProcessPOCompleted;
    
    /// <remarks/>
    public event SearchPOCompletedEventHandler SearchPOCompleted;
    
    /// <remarks/>
    public event GRPOSearchCompletedEventHandler GRPOSearchCompleted;
    
    /// <remarks/>
    public event DraftStockTakeCompletedEventHandler DraftStockTakeCompleted;
    
    /// <remarks/>
    public event DraftPOCompletedEventHandler DraftPOCompleted;
    
    /// <remarks/>
    public event GetOutStandingPOCompletedEventHandler GetOutStandingPOCompleted;
    
    /// <remarks/>
    public event CheckSlpNameCompletedEventHandler CheckSlpNameCompleted;
    
    /// <remarks/>
    public event GetGRPOCompletedEventHandler GetGRPOCompleted;
    
    /// <remarks/>
    public event CheckOnHandCompletedEventHandler CheckOnHandCompleted;
    
    /// <remarks/>
    public event GetItemStockTakeCompletedEventHandler GetItemStockTakeCompleted;
    
    /// <remarks/>
    public event GetItemCumulativeCompletedEventHandler GetItemCumulativeCompleted;
    
    /// <remarks/>
    public event GetStockTakeListCompletedEventHandler GetStockTakeListCompleted;
    
    /// <remarks/>
    public event GetStockTakeDraftDetailCompletedEventHandler GetStockTakeDraftDetailCompleted;
    
    /// <remarks/>
    public event GetStockTakeDetailCompletedEventHandler GetStockTakeDetailCompleted;
    
    /// <remarks/>
    public event GetLastPurchasePriceCompletedEventHandler GetLastPurchasePriceCompleted;
    
    /// <remarks/>
    public event GetLogoCompletedEventHandler GetLogoCompleted;
    
    /// <remarks/>
    public event GetDefaultWareHouseCompletedEventHandler GetDefaultWareHouseCompleted;
    
    /// <remarks/>
    public event GetItemCompletedEventHandler GetItemCompleted;
    
    /// <remarks/>
    public event GetAllItemCompletedEventHandler GetAllItemCompleted;
    
    /// <remarks/>
    public event GetItemEditCompletedEventHandler GetItemEditCompleted;
    
    /// <remarks/>
    public event CopyToGRPOCompletedEventHandler CopyToGRPOCompleted;
    
    /// <remarks/>
    public event GetGRPOUpdateCompletedEventHandler GetGRPOUpdateCompleted;
    
    /// <remarks/>
    public event GetPODataUpdateCompletedEventHandler GetPODataUpdateCompleted;
    
    /// <remarks/>
    public event GetPODraftUpdateCompletedEventHandler GetPODraftUpdateCompleted;
    
    /// <remarks/>
    public event GetOutletCalendarCompletedEventHandler GetOutletCalendarCompleted;
    
    /// <remarks/>
    public event GetOutletAmountCompletedEventHandler GetOutletAmountCompleted;
    
    /// <remarks/>
    public event GetOutletSupplierCompletedEventHandler GetOutletSupplierCompleted;
    
    /// <remarks/>
    public event GetItemOutletSetupCompletedEventHandler GetItemOutletSetupCompleted;
    
    /// <remarks/>
    public event GetSupplierOutletSetupCompletedEventHandler GetSupplierOutletSetupCompleted;
    
    /// <remarks/>
    public event GetSupplierItemSetupCompletedEventHandler GetSupplierItemSetupCompleted;
    
    /// <remarks/>
    public event GetOutletItemListCompletedEventHandler GetOutletItemListCompleted;
    
    /// <remarks/>
    public event CheckAddPOCompletedEventHandler CheckAddPOCompleted;
    
    /// <remarks/>
    public event GetSupplierAmountCompletedEventHandler GetSupplierAmountCompleted;
    
    /// <remarks/>
    public event UpdateOutletCalendarCompletedEventHandler UpdateOutletCalendarCompleted;
    
    /// <remarks/>
    public event UpdateOutletOrderAmountCompletedEventHandler UpdateOutletOrderAmountCompleted;
    
    /// <remarks/>
    public event UpdateOutletItemListCompletedEventHandler UpdateOutletItemListCompleted;
    
    /// <remarks/>
    public event InsertABDeliveryOrderCompletedEventHandler InsertABDeliveryOrderCompleted;
    
    /// <remarks/>
    public event DeleteVendorSetupCompletedEventHandler DeleteVendorSetupCompleted;
    
    /// <remarks/>
    public event GetPOByDocEntryCompletedEventHandler GetPOByDocEntryCompleted;
    
    /// <remarks/>
    public event GetRouteHoldingCompletedEventHandler GetRouteHoldingCompleted;
    
    /// <remarks/>
    public event GetDriverNoCompletedEventHandler GetDriverNoCompleted;
    
    /// <remarks/>
    public event GetBlockCompletedEventHandler GetBlockCompleted;
    
    /// <remarks/>
    public event GetSupplierSetupListCompletedEventHandler GetSupplierSetupListCompleted;
    
    /// <remarks/>
    public event ChangePasswordCompletedEventHandler ChangePasswordCompleted;
    
    /// <remarks/>
    public event ReportStockTakeListCompletedEventHandler ReportStockTakeListCompleted;
    
    /// <remarks/>
    public event ReportPurchaseOrderCompletedEventHandler ReportPurchaseOrderCompleted;
    
    /// <remarks/>
    public event CopyTemplateCompletedEventHandler CopyTemplateCompleted;
    
    /// <remarks/>
    public event UpdateXMLLogCompletedEventHandler UpdateXMLLogCompleted;
    
    /// <remarks/>
    public event InsertPODetailsforEmailCheckCompletedEventHandler InsertPODetailsforEmailCheckCompleted;
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://electra-ai.com/UpdateStatusforEmailCheck", RequestNamespace="http://electra-ai.com/", ResponseNamespace="http://electra-ai.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string UpdateStatusforEmailCheck(string poNumber, string status, string errMsg, string id) {
        object[] results = this.Invoke("UpdateStatusforEmailCheck", new object[] {
                    poNumber,
                    status,
                    errMsg,
                    id});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginUpdateStatusforEmailCheck(string poNumber, string status, string errMsg, string id, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("UpdateStatusforEmailCheck", new object[] {
                    poNumber,
                    status,
                    errMsg,
                    id}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndUpdateStatusforEmailCheck(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void UpdateStatusforEmailCheckAsync(string poNumber, string status, string errMsg, string id) {
        this.UpdateStatusforEmailCheckAsync(poNumber, status, errMsg, id, null);
    }
    
    /// <remarks/>
    public void UpdateStatusforEmailCheckAsync(string poNumber, string status, string errMsg, string id, object userState) {
        if ((this.UpdateStatusforEmailCheckOperationCompleted == null)) {
            this.UpdateStatusforEmailCheckOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateStatusforEmailCheckOperationCompleted);
        }
        this.InvokeAsync("UpdateStatusforEmailCheck", new object[] {
                    poNumber,
                    status,
                    errMsg,
                    id}, this.UpdateStatusforEmailCheckOperationCompleted, userState);
    }
    
    private void OnUpdateStatusforEmailCheckOperationCompleted(object arg) {
        if ((this.UpdateStatusforEmailCheckCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.UpdateStatusforEmailCheckCompleted(this, new UpdateStatusforEmailCheckCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://electra-ai.com/SelectMaxIdofPO", RequestNamespace="http://electra-ai.com/", ResponseNamespace="http://electra-ai.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string SelectMaxIdofPO(string poNumber) {
        object[] results = this.Invoke("SelectMaxIdofPO", new object[] {
                    poNumber});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginSelectMaxIdofPO(string poNumber, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("SelectMaxIdofPO", new object[] {
                    poNumber}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndSelectMaxIdofPO(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void SelectMaxIdofPOAsync(string poNumber) {
        this.SelectMaxIdofPOAsync(poNumber, null);
    }
    
    /// <remarks/>
    public void SelectMaxIdofPOAsync(string poNumber, object userState) {
        if ((this.SelectMaxIdofPOOperationCompleted == null)) {
            this.SelectMaxIdofPOOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelectMaxIdofPOOperationCompleted);
        }
        this.InvokeAsync("SelectMaxIdofPO", new object[] {
                    poNumber}, this.SelectMaxIdofPOOperationCompleted, userState);
    }
    
    private void OnSelectMaxIdofPOOperationCompleted(object arg) {
        if ((this.SelectMaxIdofPOCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.SelectMaxIdofPOCompleted(this, new SelectMaxIdofPOCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://electra-ai.com/CreatePO", RequestNamespace="http://electra-ai.com/", ResponseNamespace="http://electra-ai.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Data.DataSet CreatePO(string userCode, string pwd, string databaseName, string isUpdate, string isPO, System.Data.DataSet dsData, bool isDraft, string Key) {
        object[] results = this.Invoke("CreatePO", new object[] {
                    userCode,
                    pwd,
                    databaseName,
                    isUpdate,
                    isPO,
                    dsData,
                    isDraft,
                    Key});
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginCreatePO(string userCode, string pwd, string databaseName, string isUpdate, string isPO, System.Data.DataSet dsData, bool isDraft, string Key, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("CreatePO", new object[] {
                    userCode,
                    pwd,
                    databaseName,
                    isUpdate,
                    isPO,
                    dsData,
                    isDraft,
                    Key}, callback, asyncState);
    }
    
    /// <remarks/>
    public System.Data.DataSet EndCreatePO(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public void CreatePOAsync(string userCode, string pwd, string databaseName, string isUpdate, string isPO, System.Data.DataSet dsData, bool isDraft, string Key) {
        this.CreatePOAsync(userCode, pwd, databaseName, isUpdate, isPO, dsData, isDraft, Key, null);
    }
    
    /// <remarks/>
    public void CreatePOAsync(string userCode, string pwd, string databaseName, string isUpdate, string isPO, System.Data.DataSet dsData, bool isDraft, string Key, object userState) {
        if ((this.CreatePOOperationCompleted == null)) {
            this.CreatePOOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreatePOOperationCompleted);
        }
        this.InvokeAsync("CreatePO", new object[] {
                    userCode,
                    pwd,
                    databaseName,
                    isUpdate,
                    isPO,
                    dsData,
                    isDraft,
                    Key}, this.CreatePOOperationCompleted, userState);
    }
    
    private void OnCreatePOOperationCompleted(object arg) {
        if ((this.CreatePOCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.CreatePOCompleted(this, new CreatePOCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://electra-ai.com/UpdateSO", RequestNamespace="http://electra-ai.com/", ResponseNamespace="http://electra-ai.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string UpdateSO(string userId, string passWord, System.Data.DataSet data, string databaseName, bool isInsert) {
        object[] results = this.Invoke("UpdateSO", new object[] {
                    userId,
                    passWord,
                    data,
                    databaseName,
                    isInsert});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginUpdateSO(string userId, string passWord, System.Data.DataSet data, string databaseName, bool isInsert, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("UpdateSO", new object[] {
                    userId,
                    passWord,
                    data,
                    databaseName,
                    isInsert}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndUpdateSO(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void UpdateSOAsync(string userId, string passWord, System.Data.DataSet data, string databaseName, bool isInsert) {
        this.UpdateSOAsync(userId, passWord, data, databaseName, isInsert, null);
    }
    
    /// <remarks/>
    public void UpdateSOAsync(string userId, string passWord, System.Data.DataSet data, string databaseName, bool isInsert, object userState) {
        if ((this.UpdateSOOperationCompleted == null)) {
            this.UpdateSOOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateSOOperationCompleted);
        }
        this.InvokeAsync("UpdateSO", new object[] {
                    userId,
                    passWord,
                    data,
                    databaseName,
                    isInsert}, this.UpdateSOOperationCompleted, userState);
    }
    
    private void OnUpdateSOOperationCompleted(object arg) {
        if ((this.UpdateSOCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.UpdateSOCompleted(this, new UpdateSOCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://electra-ai.com/GetSOData", RequestNamespace="http://electra-ai.com/", ResponseNamespace="http://electra-ai.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Data.DataSet GetSOData(string databaseName, string poDocEntry) {
        object[] results = this.Invoke("GetSOData", new object[] {
                    databaseName,
                    poDocEntry});
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetSOData(string databaseName, string poDocEntry, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetSOData", new object[] {
                    databaseName,
                    poDocEntry}, callback, asyncState);
    }
    
    /// <remarks/>
    public System.Data.DataSet EndGetSOData(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public void GetSODataAsync(string databaseName, string poDocEntry) {
        this.GetSODataAsync(databaseName, poDocEntry, null);
    }
    
    /// <remarks/>
    public void GetSODataAsync(string databaseName, string poDocEntry, object userState) {
        if ((this.GetSODataOperationCompleted == null)) {
            this.GetSODataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSODataOperationCompleted);
        }
        this.InvokeAsync("GetSOData", new object[] {
                    databaseName,
                    poDocEntry}, this.GetSODataOperationCompleted, userState);
    }
    
    private void OnGetSODataOperationCompleted(object arg) {
        if ((this.GetSODataCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetSODataCompleted(this, new GetSODataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://electra-ai.com/GetSODataById", RequestNamespace="http://electra-ai.com/", ResponseNamespace="http://electra-ai.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Data.DataSet GetSODataById(string databaseName, string id) {
        object[] results = this.Invoke("GetSODataById", new object[] {
                    databaseName,
                    id});
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetSODataById(string databaseName, string id, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetSODataById", new object[] {
                    databaseName,
                    id}, callback, asyncState);
    }
    
    /// <remarks/>
    public System.Data.DataSet EndGetSODataById(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public void GetSODataByIdAsync(string databaseName, string id) {
        this.GetSODataByIdAsync(databaseName, id, null);
    }
    
    /// <remarks/>
    public void GetSODataByIdAsync(string databaseName, string id, object userState) {
        if ((this.GetSODataByIdOperationCompleted == null)) {
            this.GetSODataByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSODataByIdOperationCompleted);
        }
        this.InvokeAsync("GetSODataById", new object[] {
                    databaseName,
                    id}, this.GetSODataByIdOperationCompleted, userState);
    }
    
    private void OnGetSODataByIdOperationCompleted(object arg) {
        if ((this.GetSODataByIdCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetSODataByIdCompleted(this, new GetSODataByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://electra-ai.com/SearchSOData", RequestNamespace="http://electra-ai.com/", ResponseNamespace="http://electra-ai.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Data.DataSet SearchSOData(string databaseName, string status, string poNo, System.DateTime fromDate, System.DateTime toDate) {
        object[] results = this.Invoke("SearchSOData", new object[] {
                    databaseName,
                    status,
                    poNo,
                    fromDate,
                    toDate});
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginSearchSOData(string databaseName, string status, string poNo, System.DateTime fromDate, System.DateTime toDate, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("SearchSOData", new object[] {
                    databaseName,
                    status,
                    poNo,
                    fromDate,
                    toDate}, callback, asyncState);
    }
    
    /// <remarks/>
    public System.Data.DataSet EndSearchSOData(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public void SearchSODataAsync(string databaseName, string status, string poNo, System.DateTime fromDate, System.DateTime toDate) {
        this.SearchSODataAsync(databaseName, status, poNo, fromDate, toDate, null);
    }
    
    /// <remarks/>
    public void SearchSODataAsync(string databaseName, string status, string poNo, System.DateTime fromDate, System.DateTime toDate, object userState) {
        if ((this.SearchSODataOperationCompleted == null)) {
            this.SearchSODataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchSODataOperationCompleted);
        }
        this.InvokeAsync("SearchSOData", new object[] {
                    databaseName,
                    status,
                    poNo,
                    fromDate,
                    toDate}, this.SearchSODataOperationCompleted, userState);
    }
    
    private void OnSearchSODataOperationCompleted(object arg) {
        if ((this.SearchSODataCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.SearchSODataCompleted(this, new SearchSODataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://electra-ai.com/CheckCreatedSOSAP", RequestNamespace="http://electra-ai.com/", ResponseNamespace="http://electra-ai.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Data.DataSet CheckCreatedSOSAP(string docEntry, string driverNo, string databaseName) {
        object[] results = this.Invoke("CheckCreatedSOSAP", new object[] {
                    docEntry,
                    driverNo,
                    databaseName});
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginCheckCreatedSOSAP(string docEntry, string driverNo, string databaseName, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("CheckCreatedSOSAP", new object[] {
                    docEntry,
                    driverNo,
                    databaseName}, callback, asyncState);
    }
    
    /// <remarks/>
    public System.Data.DataSet EndCheckCreatedSOSAP(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public void CheckCreatedSOSAPAsync(string docEntry, string driverNo, string databaseName) {
        this.CheckCreatedSOSAPAsync(docEntry, driverNo, databaseName, null);
    }
    
    /// <remarks/>
    public void CheckCreatedSOSAPAsync(string docEntry, string driverNo, string databaseName, object userState) {
        if ((this.CheckCreatedSOSAPOperationCompleted == null)) {
            this.CheckCreatedSOSAPOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckCreatedSOSAPOperationCompleted);
        }
        this.InvokeAsync("CheckCreatedSOSAP", new object[] {
                    docEntry,
                    driverNo,
                    databaseName}, this.CheckCreatedSOSAPOperationCompleted, userState);
    }
    
    private void OnCheckCreatedSOSAPOperationCompleted(object arg) {
        if ((this.CheckCreatedSOSAPCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.CheckCreatedSOSAPCompleted(this, new CheckCreatedSOSAPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://electra-ai.com/GetPrefix", RequestNamespace="http://electra-ai.com/", ResponseNamespace="http://electra-ai.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Data.DataSet GetPrefix(int Series, string databaseName) {
        object[] results = this.Invoke("GetPrefix", new object[] {
                    Series,
                    databaseName});
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetPrefix(int Series, string databaseName, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetPrefix", new object[] {
                    Series,
                    databaseName}, callback, asyncState);
    }
    
    /// <remarks/>
    public System.Data.DataSet EndGetPrefix(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public void GetPrefixAsync(int Series, string databaseName) {
        this.GetPrefixAsync(Series, databaseName, null);
    }
    
    /// <remarks/>
    public void GetPrefixAsync(int Series, string databaseName, object userState) {
        if ((this.GetPrefixOperationCompleted == null)) {
            this.GetPrefixOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPrefixOperationCompleted);
        }
        this.InvokeAsync("GetPrefix", new object[] {
                    Series,
                    databaseName}, this.GetPrefixOperationCompleted, userState);
    }
    
    private void OnGetPrefixOperationCompleted(object arg) {
        if ((this.GetPrefixCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetPrefixCompleted(this, new GetPrefixCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://electra-ai.com/GetPONo", RequestNamespace="http://electra-ai.com/", ResponseNamespace="http://electra-ai.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Data.DataSet GetPONo(int docEntry, string databaseName) {
        object[] results = this.Invoke("GetPONo", new object[] {
                    docEntry,
                    databaseName});
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetPONo(int docEntry, string databaseName, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetPONo", new object[] {
                    docEntry,
                    databaseName}, callback, asyncState);
    }
    
    /// <remarks/>
    public System.Data.DataSet EndGetPONo(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public void GetPONoAsync(int docEntry, string databaseName) {
        this.GetPONoAsync(docEntry, databaseName, null);
    }
    
    /// <remarks/>
    public void GetPONoAsync(int docEntry, string databaseName, object userState) {
        if ((this.GetPONoOperationCompleted == null)) {
            this.GetPONoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPONoOperationCompleted);
        }
        this.InvokeAsync("GetPONo", new object[] {
                    docEntry,
                    databaseName}, this.GetPONoOperationCompleted, userState);
    }
    
    private void OnGetPONoOperationCompleted(object arg) {
        if ((this.GetPONoCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetPONoCompleted(this, new GetPONoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://electra-ai.com/GetStockYear", RequestNamespace="http://electra-ai.com/", ResponseNamespace="http://electra-ai.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Data.DataSet GetStockYear(string userId, string passWord, string databaseName) {
        object[] results = this.Invoke("GetStockYear", new object[] {
                    userId,
                    passWord,
                    databaseName});
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetStockYear(string userId, string passWord, string databaseName, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetStockYear", new object[] {
                    userId,
                    passWord,
                    databaseName}, callback, asyncState);
    }
    
    /// <remarks/>
    public System.Data.DataSet EndGetStockYear(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public void GetStockYearAsync(string userId, string passWord, string databaseName) {
        this.GetStockYearAsync(userId, passWord, databaseName, null);
    }
    
    /// <remarks/>
    public void GetStockYearAsync(string userId, string passWord, string databaseName, object userState) {
        if ((this.GetStockYearOperationCompleted == null)) {
            this.GetStockYearOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStockYearOperationCompleted);
        }
        this.InvokeAsync("GetStockYear", new object[] {
                    userId,
                    passWord,
                    databaseName}, this.GetStockYearOperationCompleted, userState);
    }
    
    private void OnGetStockYearOperationCompleted(object arg) {
        if ((this.GetStockYearCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetStockYearCompleted(this, new GetStockYearCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://electra-ai.com/GetAllABCompany", RequestNamespace="http://electra-ai.com/", ResponseNamespace="http://electra-ai.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Data.DataSet GetAllABCompany() {
        object[] results = this.Invoke("GetAllABCompany", new object[0]);
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetAllABCompany(System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetAllABCompany", new object[0], callback, asyncState);
    }
    
    /// <remarks/>
    public System.Data.DataSet EndGetAllABCompany(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public void GetAllABCompanyAsync() {
        this.GetAllABCompanyAsync(null);
    }
    
    /// <remarks/>
    public void GetAllABCompanyAsync(object userState) {
        if ((this.GetAllABCompanyOperationCompleted == null)) {
            this.GetAllABCompanyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllABCompanyOperationCompleted);
        }
        this.InvokeAsync("GetAllABCompany", new object[0], this.GetAllABCompanyOperationCompleted, userState);
    }
    
    private void OnGetAllABCompanyOperationCompleted(object arg) {
        if ((this.GetAllABCompanyCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetAllABCompanyCompleted(this, new GetAllABCompanyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://electra-ai.com/GetAllABOutlet", RequestNamespace="http://electra-ai.com/", ResponseNamespace="http://electra-ai.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Data.DataSet GetAllABOutlet() {
        object[] results = this.Invoke("GetAllABOutlet", new object[0]);
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetAllABOutlet(System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetAllABOutlet", new object[0], callback, asyncState);
    }
    
    /// <remarks/>
    public System.Data.DataSet EndGetAllABOutlet(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public void GetAllABOutletAsync() {
        this.GetAllABOutletAsync(null);
    }
    
    /// <remarks/>
    public void GetAllABOutletAsync(object userState) {
        if ((this.GetAllABOutletOperationCompleted == null)) {
            this.GetAllABOutletOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllABOutletOperationCompleted);
        }
        this.InvokeAsync("GetAllABOutlet", new object[0], this.GetAllABOutletOperationCompleted, userState);
    }
    
    private void OnGetAllABOutletOperationCompleted(object arg) {
        if ((this.GetAllABOutletCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetAllABOutletCompleted(this, new GetAllABOutletCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://electra-ai.com/GetWareHouseAddress", RequestNamespace="http://electra-ai.com/", ResponseNamespace="http://electra-ai.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Data.DataSet GetWareHouseAddress(string userId, string passWord, string databaseName) {
        object[] results = this.Invoke("GetWareHouseAddress", new object[] {
                    userId,
                    passWord,
                    databaseName});
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetWareHouseAddress(string userId, string passWord, string databaseName, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetWareHouseAddress", new object[] {
                    userId,
                    passWord,
                    databaseName}, callback, asyncState);
    }
    
    /// <remarks/>
    public System.Data.DataSet EndGetWareHouseAddress(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public void GetWareHouseAddressAsync(string userId, string passWord, string databaseName) {
        this.GetWareHouseAddressAsync(userId, passWord, databaseName, null);
    }
    
    /// <remarks/>
    public void GetWareHouseAddressAsync(string userId, string passWord, string databaseName, object userState) {
        if ((this.GetWareHouseAddressOperationCompleted == null)) {
            this.GetWareHouseAddressOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWareHouseAddressOperationCompleted);
        }
        this.InvokeAsync("GetWareHouseAddress", new object[] {
                    userId,
                    passWord,
                    databaseName}, this.GetWareHouseAddressOperationCompleted, userState);
    }
    
    private void OnGetWareHouseAddressOperationCompleted(object arg) {
        if ((this.GetWareHouseAddressCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetWareHouseAddressCompleted(this, new GetWareHouseAddressCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://electra-ai.com/GetABOutletByCompany", RequestNamespace="http://electra-ai.com/", ResponseNamespace="http://electra-ai.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Data.DataSet GetABOutletByCompany(string companyDB) {
        object[] results = this.Invoke("GetABOutletByCompany", new object[] {
                    companyDB});
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetABOutletByCompany(string companyDB, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetABOutletByCompany", new object[] {
                    companyDB}, callback, asyncState);
    }
    
    /// <remarks/>
    public System.Data.DataSet EndGetABOutletByCompany(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public void GetABOutletByCompanyAsync(string companyDB) {
        this.GetABOutletByCompanyAsync(companyDB, null);
    }
    
    /// <remarks/>
    public void GetABOutletByCompanyAsync(string companyDB, object userState) {
        if ((this.GetABOutletByCompanyOperationCompleted == null)) {
            this.GetABOutletByCompanyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetABOutletByCompanyOperationCompleted);
        }
        this.InvokeAsync("GetABOutletByCompany", new object[] {
                    companyDB}, this.GetABOutletByCompanyOperationCompleted, userState);
    }
    
    private void OnGetABOutletByCompanyOperationCompleted(object arg) {
        if ((this.GetABOutletByCompanyCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetABOutletByCompanyCompleted(this, new GetABOutletByCompanyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://electra-ai.com/GetABOutletByData", RequestNamespace="http://electra-ai.com/", ResponseNamespace="http://electra-ai.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Data.DataSet GetABOutletByData(string companyDB) {
        object[] results = this.Invoke("GetABOutletByData", new object[] {
                    companyDB});
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetABOutletByData(string companyDB, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetABOutletByData", new object[] {
                    companyDB}, callback, asyncState);
    }
    
    /// <remarks/>
    public System.Data.DataSet EndGetABOutletByData(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public void GetABOutletByDataAsync(string companyDB) {
        this.GetABOutletByDataAsync(companyDB, null);
    }
    
    /// <remarks/>
    public void GetABOutletByDataAsync(string companyDB, object userState) {
        if ((this.GetABOutletByDataOperationCompleted == null)) {
            this.GetABOutletByDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetABOutletByDataOperationCompleted);
        }
        this.InvokeAsync("GetABOutletByData", new object[] {
                    companyDB}, this.GetABOutletByDataOperationCompleted, userState);
    }
    
    private void OnGetABOutletByDataOperationCompleted(object arg) {
        if ((this.GetABOutletByDataCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetABOutletByDataCompleted(this, new GetABOutletByDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://electra-ai.com/GetInternalPO", RequestNamespace="http://electra-ai.com/", ResponseNamespace="http://electra-ai.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Data.DataSet GetInternalPO(string vendorCode) {
        object[] results = this.Invoke("GetInternalPO", new object[] {
                    vendorCode});
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetInternalPO(string vendorCode, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetInternalPO", new object[] {
                    vendorCode}, callback, asyncState);
    }
    
    /// <remarks/>
    public System.Data.DataSet EndGetInternalPO(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public void GetInternalPOAsync(string vendorCode) {
        this.GetInternalPOAsync(vendorCode, null);
    }
    
    /// <remarks/>
    public void GetInternalPOAsync(string vendorCode, object userState) {
        if ((this.GetInternalPOOperationCompleted == null)) {
            this.GetInternalPOOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInternalPOOperationCompleted);
        }
        this.InvokeAsync("GetInternalPO", new object[] {
                    vendorCode}, this.GetInternalPOOperationCompleted, userState);
    }
    
    private void OnGetInternalPOOperationCompleted(object arg) {
        if ((this.GetInternalPOCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetInternalPOCompleted(this, new GetInternalPOCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://electra-ai.com/GetCustomerCode", RequestNamespace="http://electra-ai.com/", ResponseNamespace="http://electra-ai.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Data.DataSet GetCustomerCode(string databaseName) {
        object[] results = this.Invoke("GetCustomerCode", new object[] {
                    databaseName});
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetCustomerCode(string databaseName, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetCustomerCode", new object[] {
                    databaseName}, callback, asyncState);
    }
    
    /// <remarks/>
    public System.Data.DataSet EndGetCustomerCode(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public void GetCustomerCodeAsync(string databaseName) {
        this.GetCustomerCodeAsync(databaseName, null);
    }
    
    /// <remarks/>
    public void GetCustomerCodeAsync(string databaseName, object userState) {
        if ((this.GetCustomerCodeOperationCompleted == null)) {
            this.GetCustomerCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCustomerCodeOperationCompleted);
        }
        this.InvokeAsync("GetCustomerCode", new object[] {
                    databaseName}, this.GetCustomerCodeOperationCompleted, userState);
    }
    
    private void OnGetCustomerCodeOperationCompleted(object arg) {
        if ((this.GetCustomerCodeCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetCustomerCodeCompleted(this, new GetCustomerCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://electra-ai.com/GetOnlineUser", RequestNamespace="http://electra-ai.com/", ResponseNamespace="http://electra-ai.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Data.DataSet GetOnlineUser() {
        object[] results = this.Invoke("GetOnlineUser", new object[0]);
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetOnlineUser(System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetOnlineUser", new object[0], callback, asyncState);
    }
    
    /// <remarks/>
    public System.Data.DataSet EndGetOnlineUser(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public void GetOnlineUserAsync() {
        this.GetOnlineUserAsync(null);
    }
    
    /// <remarks/>
    public void GetOnlineUserAsync(object userState) {
        if ((this.GetOnlineUserOperationCompleted == null)) {
            this.GetOnlineUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOnlineUserOperationCompleted);
        }
        this.InvokeAsync("GetOnlineUser", new object[0], this.GetOnlineUserOperationCompleted, userState);
    }
    
    private void OnGetOnlineUserOperationCompleted(object arg) {
        if ((this.GetOnlineUserCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetOnlineUserCompleted(this, new GetOnlineUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://electra-ai.com/GetAllOutlet", RequestNamespace="http://electra-ai.com/", ResponseNamespace="http://electra-ai.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Data.DataSet GetAllOutlet(string userId, string passWord, string databaseName) {
        object[] results = this.Invoke("GetAllOutlet", new object[] {
                    userId,
                    passWord,
                    databaseName});
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetAllOutlet(string userId, string passWord, string databaseName, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetAllOutlet", new object[] {
                    userId,
                    passWord,
                    databaseName}, callback, asyncState);
    }
    
    /// <remarks/>
    public System.Data.DataSet EndGetAllOutlet(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public void GetAllOutletAsync(string userId, string passWord, string databaseName) {
        this.GetAllOutletAsync(userId, passWord, databaseName, null);
    }
    
    /// <remarks/>
    public void GetAllOutletAsync(string userId, string passWord, string databaseName, object userState) {
        if ((this.GetAllOutletOperationCompleted == null)) {
            this.GetAllOutletOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllOutletOperationCompleted);
        }
        this.InvokeAsync("GetAllOutlet", new object[] {
                    userId,
                    passWord,
                    databaseName}, this.GetAllOutletOperationCompleted, userState);
    }
    
    private void OnGetAllOutletOperationCompleted(object arg) {
        if ((this.GetAllOutletCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetAllOutletCompleted(this, new GetAllOutletCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://electra-ai.com/GetAllCompany", RequestNamespace="http://electra-ai.com/", ResponseNamespace="http://electra-ai.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Data.DataSet GetAllCompany() {
        object[] results = this.Invoke("GetAllCompany", new object[0]);
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetAllCompany(System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetAllCompany", new object[0], callback, asyncState);
    }
    
    /// <remarks/>
    public System.Data.DataSet EndGetAllCompany(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public void GetAllCompanyAsync() {
        this.GetAllCompanyAsync(null);
    }
    
    /// <remarks/>
    public void GetAllCompanyAsync(object userState) {
        if ((this.GetAllCompanyOperationCompleted == null)) {
            this.GetAllCompanyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllCompanyOperationCompleted);
        }
        this.InvokeAsync("GetAllCompany", new object[0], this.GetAllCompanyOperationCompleted, userState);
    }
    
    private void OnGetAllCompanyOperationCompleted(object arg) {
        if ((this.GetAllCompanyCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetAllCompanyCompleted(this, new GetAllCompanyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://electra-ai.com/GetCompanyInfo", RequestNamespace="http://electra-ai.com/", ResponseNamespace="http://electra-ai.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Data.DataSet GetCompanyInfo(string companyCode) {
        object[] results = this.Invoke("GetCompanyInfo", new object[] {
                    companyCode});
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetCompanyInfo(string companyCode, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetCompanyInfo", new object[] {
                    companyCode}, callback, asyncState);
    }
    
    /// <remarks/>
    public System.Data.DataSet EndGetCompanyInfo(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public void GetCompanyInfoAsync(string companyCode) {
        this.GetCompanyInfoAsync(companyCode, null);
    }
    
    /// <remarks/>
    public void GetCompanyInfoAsync(string companyCode, object userState) {
        if ((this.GetCompanyInfoOperationCompleted == null)) {
            this.GetCompanyInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCompanyInfoOperationCompleted);
        }
        this.InvokeAsync("GetCompanyInfo", new object[] {
                    companyCode}, this.GetCompanyInfoOperationCompleted, userState);
    }
    
    private void OnGetCompanyInfoOperationCompleted(object arg) {
        if ((this.GetCompanyInfoCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetCompanyInfoCompleted(this, new GetCompanyInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://electra-ai.com/CheckPermissonDB", RequestNamespace="http://electra-ai.com/", ResponseNamespace="http://electra-ai.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Data.DataSet CheckPermissonDB(string outlet, string companyCode, string loginDB) {
        object[] results = this.Invoke("CheckPermissonDB", new object[] {
                    outlet,
                    companyCode,
                    loginDB});
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginCheckPermissonDB(string outlet, string companyCode, string loginDB, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("CheckPermissonDB", new object[] {
                    outlet,
                    companyCode,
                    loginDB}, callback, asyncState);
    }
    
    /// <remarks/>
    public System.Data.DataSet EndCheckPermissonDB(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public void CheckPermissonDBAsync(string outlet, string companyCode, string loginDB) {
        this.CheckPermissonDBAsync(outlet, companyCode, loginDB, null);
    }
    
    /// <remarks/>
    public void CheckPermissonDBAsync(string outlet, string companyCode, string loginDB, object userState) {
        if ((this.CheckPermissonDBOperationCompleted == null)) {
            this.CheckPermissonDBOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckPermissonDBOperationCompleted);
        }
        this.InvokeAsync("CheckPermissonDB", new object[] {
                    outlet,
                    companyCode,
                    loginDB}, this.CheckPermissonDBOperationCompleted, userState);
    }
    
    private void OnCheckPermissonDBOperationCompleted(object arg) {
        if ((this.CheckPermissonDBCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.CheckPermissonDBCompleted(this, new CheckPermissonDBCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://electra-ai.com/GetLogin", RequestNamespace="http://electra-ai.com/", ResponseNamespace="http://electra-ai.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Data.DataSet GetLogin(string userId, string passWord, string databaseName) {
        object[] results = this.Invoke("GetLogin", new object[] {
                    userId,
                    passWord,
                    databaseName});
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetLogin(string userId, string passWord, string databaseName, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetLogin", new object[] {
                    userId,
                    passWord,
                    databaseName}, callback, asyncState);
    }
    
    /// <remarks/>
    public System.Data.DataSet EndGetLogin(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public void GetLoginAsync(string userId, string passWord, string databaseName) {
        this.GetLoginAsync(userId, passWord, databaseName, null);
    }
    
    /// <remarks/>
    public void GetLoginAsync(string userId, string passWord, string databaseName, object userState) {
        if ((this.GetLoginOperationCompleted == null)) {
            this.GetLoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLoginOperationCompleted);
        }
        this.InvokeAsync("GetLogin", new object[] {
                    userId,
                    passWord,
                    databaseName}, this.GetLoginOperationCompleted, userState);
    }
    
    private void OnGetLoginOperationCompleted(object arg) {
        if ((this.GetLoginCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetLoginCompleted(this, new GetLoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://electra-ai.com/GetUserInfo", RequestNamespace="http://electra-ai.com/", ResponseNamespace="http://electra-ai.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Data.DataSet GetUserInfo(string databaseName, string userCode) {
        object[] results = this.Invoke("GetUserInfo", new object[] {
                    databaseName,
                    userCode});
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetUserInfo(string databaseName, string userCode, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetUserInfo", new object[] {
                    databaseName,
                    userCode}, callback, asyncState);
    }
    
    /// <remarks/>
    public System.Data.DataSet EndGetUserInfo(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public void GetUserInfoAsync(string databaseName, string userCode) {
        this.GetUserInfoAsync(databaseName, userCode, null);
    }
    
    /// <remarks/>
    public void GetUserInfoAsync(string databaseName, string userCode, object userState) {
        if ((this.GetUserInfoOperationCompleted == null)) {
            this.GetUserInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserInfoOperationCompleted);
        }
        this.InvokeAsync("GetUserInfo", new object[] {
                    databaseName,
                    userCode}, this.GetUserInfoOperationCompleted, userState);
    }
    
    private void OnGetUserInfoOperationCompleted(object arg) {
        if ((this.GetUserInfoCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetUserInfoCompleted(this, new GetUserInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://electra-ai.com/Login", RequestNamespace="http://electra-ai.com/", ResponseNamespace="http://electra-ai.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public bool Login(string userId, string passWord, string databaseName) {
        object[] results = this.Invoke("Login", new object[] {
                    userId,
                    passWord,
                    databaseName});
        return ((bool)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginLogin(string userId, string passWord, string databaseName, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("Login", new object[] {
                    userId,
                    passWord,
                    databaseName}, callback, asyncState);
    }
    
    /// <remarks/>
    public bool EndLogin(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((bool)(results[0]));
    }
    
    /// <remarks/>
    public void LoginAsync(string userId, string passWord, string databaseName) {
        this.LoginAsync(userId, passWord, databaseName, null);
    }
    
    /// <remarks/>
    public void LoginAsync(string userId, string passWord, string databaseName, object userState) {
        if ((this.LoginOperationCompleted == null)) {
            this.LoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoginOperationCompleted);
        }
        this.InvokeAsync("Login", new object[] {
                    userId,
                    passWord,
                    databaseName}, this.LoginOperationCompleted, userState);
    }
    
    private void OnLoginOperationCompleted(object arg) {
        if ((this.LoginCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.LoginCompleted(this, new LoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://electra-ai.com/GetOITM", RequestNamespace="http://electra-ai.com/", ResponseNamespace="http://electra-ai.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Data.DataSet GetOITM(string userId, string passWord, string databaseName) {
        object[] results = this.Invoke("GetOITM", new object[] {
                    userId,
                    passWord,
                    databaseName});
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetOITM(string userId, string passWord, string databaseName, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetOITM", new object[] {
                    userId,
                    passWord,
                    databaseName}, callback, asyncState);
    }
    
    /// <remarks/>
    public System.Data.DataSet EndGetOITM(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public void GetOITMAsync(string userId, string passWord, string databaseName) {
        this.GetOITMAsync(userId, passWord, databaseName, null);
    }
    
    /// <remarks/>
    public void GetOITMAsync(string userId, string passWord, string databaseName, object userState) {
        if ((this.GetOITMOperationCompleted == null)) {
            this.GetOITMOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOITMOperationCompleted);
        }
        this.InvokeAsync("GetOITM", new object[] {
                    userId,
                    passWord,
                    databaseName}, this.GetOITMOperationCompleted, userState);
    }
    
    private void OnGetOITMOperationCompleted(object arg) {
        if ((this.GetOITMCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetOITMCompleted(this, new GetOITMCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://electra-ai.com/GetOPOR", RequestNamespace="http://electra-ai.com/", ResponseNamespace="http://electra-ai.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Data.DataSet GetOPOR(string userId, string passWord, string databaseName) {
        object[] results = this.Invoke("GetOPOR", new object[] {
                    userId,
                    passWord,
                    databaseName});
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetOPOR(string userId, string passWord, string databaseName, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetOPOR", new object[] {
                    userId,
                    passWord,
                    databaseName}, callback, asyncState);
    }
    
    /// <remarks/>
    public System.Data.DataSet EndGetOPOR(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public void GetOPORAsync(string userId, string passWord, string databaseName) {
        this.GetOPORAsync(userId, passWord, databaseName, null);
    }
    
    /// <remarks/>
    public void GetOPORAsync(string userId, string passWord, string databaseName, object userState) {
        if ((this.GetOPOROperationCompleted == null)) {
            this.GetOPOROperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOPOROperationCompleted);
        }
        this.InvokeAsync("GetOPOR", new object[] {
                    userId,
                    passWord,
                    databaseName}, this.GetOPOROperationCompleted, userState);
    }
    
    private void OnGetOPOROperationCompleted(object arg) {
        if ((this.GetOPORCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetOPORCompleted(this, new GetOPORCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://electra-ai.com/GetOCRD", RequestNamespace="http://electra-ai.com/", ResponseNamespace="http://electra-ai.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Data.DataSet GetOCRD(string userId, string passWord, string databaseName) {
        object[] results = this.Invoke("GetOCRD", new object[] {
                    userId,
                    passWord,
                    databaseName});
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetOCRD(string userId, string passWord, string databaseName, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetOCRD", new object[] {
                    userId,
                    passWord,
                    databaseName}, callback, asyncState);
    }
    
    /// <remarks/>
    public System.Data.DataSet EndGetOCRD(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public void GetOCRDAsync(string userId, string passWord, string databaseName) {
        this.GetOCRDAsync(userId, passWord, databaseName, null);
    }
    
    /// <remarks/>
    public void GetOCRDAsync(string userId, string passWord, string databaseName, object userState) {
        if ((this.GetOCRDOperationCompleted == null)) {
            this.GetOCRDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOCRDOperationCompleted);
        }
        this.InvokeAsync("GetOCRD", new object[] {
                    userId,
                    passWord,
                    databaseName}, this.GetOCRDOperationCompleted, userState);
    }
    
    private void OnGetOCRDOperationCompleted(object arg) {
        if ((this.GetOCRDCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetOCRDCompleted(this, new GetOCRDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://electra-ai.com/GetPeronalContact", RequestNamespace="http://electra-ai.com/", ResponseNamespace="http://electra-ai.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Data.DataSet GetPeronalContact() {
        object[] results = this.Invoke("GetPeronalContact", new object[0]);
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetPeronalContact(System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetPeronalContact", new object[0], callback, asyncState);
    }
    
    /// <remarks/>
    public System.Data.DataSet EndGetPeronalContact(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public void GetPeronalContactAsync() {
        this.GetPeronalContactAsync(null);
    }
    
    /// <remarks/>
    public void GetPeronalContactAsync(object userState) {
        if ((this.GetPeronalContactOperationCompleted == null)) {
            this.GetPeronalContactOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPeronalContactOperationCompleted);
        }
        this.InvokeAsync("GetPeronalContact", new object[0], this.GetPeronalContactOperationCompleted, userState);
    }
    
    private void OnGetPeronalContactOperationCompleted(object arg) {
        if ((this.GetPeronalContactCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetPeronalContactCompleted(this, new GetPeronalContactCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://electra-ai.com/CheckWhsCode", RequestNamespace="http://electra-ai.com/", ResponseNamespace="http://electra-ai.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public bool CheckWhsCode(string databaseName, string whsCode) {
        object[] results = this.Invoke("CheckWhsCode", new object[] {
                    databaseName,
                    whsCode});
        return ((bool)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginCheckWhsCode(string databaseName, string whsCode, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("CheckWhsCode", new object[] {
                    databaseName,
                    whsCode}, callback, asyncState);
    }
    
    /// <remarks/>
    public bool EndCheckWhsCode(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((bool)(results[0]));
    }
    
    /// <remarks/>
    public void CheckWhsCodeAsync(string databaseName, string whsCode) {
        this.CheckWhsCodeAsync(databaseName, whsCode, null);
    }
    
    /// <remarks/>
    public void CheckWhsCodeAsync(string databaseName, string whsCode, object userState) {
        if ((this.CheckWhsCodeOperationCompleted == null)) {
            this.CheckWhsCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckWhsCodeOperationCompleted);
        }
        this.InvokeAsync("CheckWhsCode", new object[] {
                    databaseName,
                    whsCode}, this.CheckWhsCodeOperationCompleted, userState);
    }
    
    private void OnCheckWhsCodeOperationCompleted(object arg) {
        if ((this.CheckWhsCodeCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.CheckWhsCodeCompleted(this, new CheckWhsCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://electra-ai.com/CheckProcessPO", RequestNamespace="http://electra-ai.com/", ResponseNamespace="http://electra-ai.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public bool CheckProcessPO(string userId, string passWord, string databaseName, string docEntry, string numAtCard, bool isInternal) {
        object[] results = this.Invoke("CheckProcessPO", new object[] {
                    userId,
                    passWord,
                    databaseName,
                    docEntry,
                    numAtCard,
                    isInternal});
        return ((bool)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginCheckProcessPO(string userId, string passWord, string databaseName, string docEntry, string numAtCard, bool isInternal, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("CheckProcessPO", new object[] {
                    userId,
                    passWord,
                    databaseName,
                    docEntry,
                    numAtCard,
                    isInternal}, callback, asyncState);
    }
    
    /// <remarks/>
    public bool EndCheckProcessPO(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((bool)(results[0]));
    }
    
    /// <remarks/>
    public void CheckProcessPOAsync(string userId, string passWord, string databaseName, string docEntry, string numAtCard, bool isInternal) {
        this.CheckProcessPOAsync(userId, passWord, databaseName, docEntry, numAtCard, isInternal, null);
    }
    
    /// <remarks/>
    public void CheckProcessPOAsync(string userId, string passWord, string databaseName, string docEntry, string numAtCard, bool isInternal, object userState) {
        if ((this.CheckProcessPOOperationCompleted == null)) {
            this.CheckProcessPOOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckProcessPOOperationCompleted);
        }
        this.InvokeAsync("CheckProcessPO", new object[] {
                    userId,
                    passWord,
                    databaseName,
                    docEntry,
                    numAtCard,
                    isInternal}, this.CheckProcessPOOperationCompleted, userState);
    }
    
    private void OnCheckProcessPOOperationCompleted(object arg) {
        if ((this.CheckProcessPOCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.CheckProcessPOCompleted(this, new CheckProcessPOCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://electra-ai.com/SearchPO", RequestNamespace="http://electra-ai.com/", ResponseNamespace="http://electra-ai.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Data.DataSet SearchPO(string userId, string passWord, string databaseName, System.DateTime fromDate, System.DateTime toDate, System.DateTime fromDueDate, System.DateTime toDueDate, string vendorCode, string status, string poNo, string changeStatus, string outlet, string isSuperUser) {
        object[] results = this.Invoke("SearchPO", new object[] {
                    userId,
                    passWord,
                    databaseName,
                    fromDate,
                    toDate,
                    fromDueDate,
                    toDueDate,
                    vendorCode,
                    status,
                    poNo,
                    changeStatus,
                    outlet,
                    isSuperUser});
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginSearchPO(string userId, string passWord, string databaseName, System.DateTime fromDate, System.DateTime toDate, System.DateTime fromDueDate, System.DateTime toDueDate, string vendorCode, string status, string poNo, string changeStatus, string outlet, string isSuperUser, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("SearchPO", new object[] {
                    userId,
                    passWord,
                    databaseName,
                    fromDate,
                    toDate,
                    fromDueDate,
                    toDueDate,
                    vendorCode,
                    status,
                    poNo,
                    changeStatus,
                    outlet,
                    isSuperUser}, callback, asyncState);
    }
    
    /// <remarks/>
    public System.Data.DataSet EndSearchPO(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public void SearchPOAsync(string userId, string passWord, string databaseName, System.DateTime fromDate, System.DateTime toDate, System.DateTime fromDueDate, System.DateTime toDueDate, string vendorCode, string status, string poNo, string changeStatus, string outlet, string isSuperUser) {
        this.SearchPOAsync(userId, passWord, databaseName, fromDate, toDate, fromDueDate, toDueDate, vendorCode, status, poNo, changeStatus, outlet, isSuperUser, null);
    }
    
    /// <remarks/>
    public void SearchPOAsync(string userId, string passWord, string databaseName, System.DateTime fromDate, System.DateTime toDate, System.DateTime fromDueDate, System.DateTime toDueDate, string vendorCode, string status, string poNo, string changeStatus, string outlet, string isSuperUser, object userState) {
        if ((this.SearchPOOperationCompleted == null)) {
            this.SearchPOOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchPOOperationCompleted);
        }
        this.InvokeAsync("SearchPO", new object[] {
                    userId,
                    passWord,
                    databaseName,
                    fromDate,
                    toDate,
                    fromDueDate,
                    toDueDate,
                    vendorCode,
                    status,
                    poNo,
                    changeStatus,
                    outlet,
                    isSuperUser}, this.SearchPOOperationCompleted, userState);
    }
    
    private void OnSearchPOOperationCompleted(object arg) {
        if ((this.SearchPOCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.SearchPOCompleted(this, new SearchPOCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://electra-ai.com/GRPOSearch", RequestNamespace="http://electra-ai.com/", ResponseNamespace="http://electra-ai.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Data.DataSet GRPOSearch(string userId, string passWord, string databaseName, System.DateTime fromDate, System.DateTime toDate, string vendorCode, string poNo, string outlet) {
        object[] results = this.Invoke("GRPOSearch", new object[] {
                    userId,
                    passWord,
                    databaseName,
                    fromDate,
                    toDate,
                    vendorCode,
                    poNo,
                    outlet});
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGRPOSearch(string userId, string passWord, string databaseName, System.DateTime fromDate, System.DateTime toDate, string vendorCode, string poNo, string outlet, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GRPOSearch", new object[] {
                    userId,
                    passWord,
                    databaseName,
                    fromDate,
                    toDate,
                    vendorCode,
                    poNo,
                    outlet}, callback, asyncState);
    }
    
    /// <remarks/>
    public System.Data.DataSet EndGRPOSearch(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public void GRPOSearchAsync(string userId, string passWord, string databaseName, System.DateTime fromDate, System.DateTime toDate, string vendorCode, string poNo, string outlet) {
        this.GRPOSearchAsync(userId, passWord, databaseName, fromDate, toDate, vendorCode, poNo, outlet, null);
    }
    
    /// <remarks/>
    public void GRPOSearchAsync(string userId, string passWord, string databaseName, System.DateTime fromDate, System.DateTime toDate, string vendorCode, string poNo, string outlet, object userState) {
        if ((this.GRPOSearchOperationCompleted == null)) {
            this.GRPOSearchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGRPOSearchOperationCompleted);
        }
        this.InvokeAsync("GRPOSearch", new object[] {
                    userId,
                    passWord,
                    databaseName,
                    fromDate,
                    toDate,
                    vendorCode,
                    poNo,
                    outlet}, this.GRPOSearchOperationCompleted, userState);
    }
    
    private void OnGRPOSearchOperationCompleted(object arg) {
        if ((this.GRPOSearchCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GRPOSearchCompleted(this, new GRPOSearchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://electra-ai.com/DraftStockTake", RequestNamespace="http://electra-ai.com/", ResponseNamespace="http://electra-ai.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Data.DataSet DraftStockTake(string userId, string passWord, string databaseName, System.DateTime dtDate, string outlet, string isSuperUser) {
        object[] results = this.Invoke("DraftStockTake", new object[] {
                    userId,
                    passWord,
                    databaseName,
                    dtDate,
                    outlet,
                    isSuperUser});
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginDraftStockTake(string userId, string passWord, string databaseName, System.DateTime dtDate, string outlet, string isSuperUser, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("DraftStockTake", new object[] {
                    userId,
                    passWord,
                    databaseName,
                    dtDate,
                    outlet,
                    isSuperUser}, callback, asyncState);
    }
    
    /// <remarks/>
    public System.Data.DataSet EndDraftStockTake(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public void DraftStockTakeAsync(string userId, string passWord, string databaseName, System.DateTime dtDate, string outlet, string isSuperUser) {
        this.DraftStockTakeAsync(userId, passWord, databaseName, dtDate, outlet, isSuperUser, null);
    }
    
    /// <remarks/>
    public void DraftStockTakeAsync(string userId, string passWord, string databaseName, System.DateTime dtDate, string outlet, string isSuperUser, object userState) {
        if ((this.DraftStockTakeOperationCompleted == null)) {
            this.DraftStockTakeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDraftStockTakeOperationCompleted);
        }
        this.InvokeAsync("DraftStockTake", new object[] {
                    userId,
                    passWord,
                    databaseName,
                    dtDate,
                    outlet,
                    isSuperUser}, this.DraftStockTakeOperationCompleted, userState);
    }
    
    private void OnDraftStockTakeOperationCompleted(object arg) {
        if ((this.DraftStockTakeCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.DraftStockTakeCompleted(this, new DraftStockTakeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://electra-ai.com/DraftPO", RequestNamespace="http://electra-ai.com/", ResponseNamespace="http://electra-ai.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Data.DataSet DraftPO(string userId, string passWord, string databaseName, System.DateTime fromDate, System.DateTime toDate, System.DateTime fromDueDate, System.DateTime toDueDate, string vendorCode, string status, string outlet, string isSuperUser) {
        object[] results = this.Invoke("DraftPO", new object[] {
                    userId,
                    passWord,
                    databaseName,
                    fromDate,
                    toDate,
                    fromDueDate,
                    toDueDate,
                    vendorCode,
                    status,
                    outlet,
                    isSuperUser});
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginDraftPO(string userId, string passWord, string databaseName, System.DateTime fromDate, System.DateTime toDate, System.DateTime fromDueDate, System.DateTime toDueDate, string vendorCode, string status, string outlet, string isSuperUser, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("DraftPO", new object[] {
                    userId,
                    passWord,
                    databaseName,
                    fromDate,
                    toDate,
                    fromDueDate,
                    toDueDate,
                    vendorCode,
                    status,
                    outlet,
                    isSuperUser}, callback, asyncState);
    }
    
    /// <remarks/>
    public System.Data.DataSet EndDraftPO(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public void DraftPOAsync(string userId, string passWord, string databaseName, System.DateTime fromDate, System.DateTime toDate, System.DateTime fromDueDate, System.DateTime toDueDate, string vendorCode, string status, string outlet, string isSuperUser) {
        this.DraftPOAsync(userId, passWord, databaseName, fromDate, toDate, fromDueDate, toDueDate, vendorCode, status, outlet, isSuperUser, null);
    }
    
    /// <remarks/>
    public void DraftPOAsync(string userId, string passWord, string databaseName, System.DateTime fromDate, System.DateTime toDate, System.DateTime fromDueDate, System.DateTime toDueDate, string vendorCode, string status, string outlet, string isSuperUser, object userState) {
        if ((this.DraftPOOperationCompleted == null)) {
            this.DraftPOOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDraftPOOperationCompleted);
        }
        this.InvokeAsync("DraftPO", new object[] {
                    userId,
                    passWord,
                    databaseName,
                    fromDate,
                    toDate,
                    fromDueDate,
                    toDueDate,
                    vendorCode,
                    status,
                    outlet,
                    isSuperUser}, this.DraftPOOperationCompleted, userState);
    }
    
    private void OnDraftPOOperationCompleted(object arg) {
        if ((this.DraftPOCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.DraftPOCompleted(this, new DraftPOCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://electra-ai.com/GetOutStandingPO", RequestNamespace="http://electra-ai.com/", ResponseNamespace="http://electra-ai.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Data.DataSet GetOutStandingPO(string userId, string passWord, string databaseName, System.DateTime fromDate, System.DateTime toDate, System.DateTime fromDueDate, System.DateTime toDueDate, string vendorCode, string poNo, string outlet, string isSuperUser) {
        object[] results = this.Invoke("GetOutStandingPO", new object[] {
                    userId,
                    passWord,
                    databaseName,
                    fromDate,
                    toDate,
                    fromDueDate,
                    toDueDate,
                    vendorCode,
                    poNo,
                    outlet,
                    isSuperUser});
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetOutStandingPO(string userId, string passWord, string databaseName, System.DateTime fromDate, System.DateTime toDate, System.DateTime fromDueDate, System.DateTime toDueDate, string vendorCode, string poNo, string outlet, string isSuperUser, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetOutStandingPO", new object[] {
                    userId,
                    passWord,
                    databaseName,
                    fromDate,
                    toDate,
                    fromDueDate,
                    toDueDate,
                    vendorCode,
                    poNo,
                    outlet,
                    isSuperUser}, callback, asyncState);
    }
    
    /// <remarks/>
    public System.Data.DataSet EndGetOutStandingPO(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public void GetOutStandingPOAsync(string userId, string passWord, string databaseName, System.DateTime fromDate, System.DateTime toDate, System.DateTime fromDueDate, System.DateTime toDueDate, string vendorCode, string poNo, string outlet, string isSuperUser) {
        this.GetOutStandingPOAsync(userId, passWord, databaseName, fromDate, toDate, fromDueDate, toDueDate, vendorCode, poNo, outlet, isSuperUser, null);
    }
    
    /// <remarks/>
    public void GetOutStandingPOAsync(string userId, string passWord, string databaseName, System.DateTime fromDate, System.DateTime toDate, System.DateTime fromDueDate, System.DateTime toDueDate, string vendorCode, string poNo, string outlet, string isSuperUser, object userState) {
        if ((this.GetOutStandingPOOperationCompleted == null)) {
            this.GetOutStandingPOOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOutStandingPOOperationCompleted);
        }
        this.InvokeAsync("GetOutStandingPO", new object[] {
                    userId,
                    passWord,
                    databaseName,
                    fromDate,
                    toDate,
                    fromDueDate,
                    toDueDate,
                    vendorCode,
                    poNo,
                    outlet,
                    isSuperUser}, this.GetOutStandingPOOperationCompleted, userState);
    }
    
    private void OnGetOutStandingPOOperationCompleted(object arg) {
        if ((this.GetOutStandingPOCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetOutStandingPOCompleted(this, new GetOutStandingPOCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://electra-ai.com/CheckSlpName", RequestNamespace="http://electra-ai.com/", ResponseNamespace="http://electra-ai.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Data.DataSet CheckSlpName(string databaseName, string userCode) {
        object[] results = this.Invoke("CheckSlpName", new object[] {
                    databaseName,
                    userCode});
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginCheckSlpName(string databaseName, string userCode, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("CheckSlpName", new object[] {
                    databaseName,
                    userCode}, callback, asyncState);
    }
    
    /// <remarks/>
    public System.Data.DataSet EndCheckSlpName(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public void CheckSlpNameAsync(string databaseName, string userCode) {
        this.CheckSlpNameAsync(databaseName, userCode, null);
    }
    
    /// <remarks/>
    public void CheckSlpNameAsync(string databaseName, string userCode, object userState) {
        if ((this.CheckSlpNameOperationCompleted == null)) {
            this.CheckSlpNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckSlpNameOperationCompleted);
        }
        this.InvokeAsync("CheckSlpName", new object[] {
                    databaseName,
                    userCode}, this.CheckSlpNameOperationCompleted, userState);
    }
    
    private void OnCheckSlpNameOperationCompleted(object arg) {
        if ((this.CheckSlpNameCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.CheckSlpNameCompleted(this, new CheckSlpNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://electra-ai.com/GetGRPO", RequestNamespace="http://electra-ai.com/", ResponseNamespace="http://electra-ai.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Data.DataSet GetGRPO(string databaseName, string docEntry) {
        object[] results = this.Invoke("GetGRPO", new object[] {
                    databaseName,
                    docEntry});
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetGRPO(string databaseName, string docEntry, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetGRPO", new object[] {
                    databaseName,
                    docEntry}, callback, asyncState);
    }
    
    /// <remarks/>
    public System.Data.DataSet EndGetGRPO(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public void GetGRPOAsync(string databaseName, string docEntry) {
        this.GetGRPOAsync(databaseName, docEntry, null);
    }
    
    /// <remarks/>
    public void GetGRPOAsync(string databaseName, string docEntry, object userState) {
        if ((this.GetGRPOOperationCompleted == null)) {
            this.GetGRPOOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGRPOOperationCompleted);
        }
        this.InvokeAsync("GetGRPO", new object[] {
                    databaseName,
                    docEntry}, this.GetGRPOOperationCompleted, userState);
    }
    
    private void OnGetGRPOOperationCompleted(object arg) {
        if ((this.GetGRPOCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetGRPOCompleted(this, new GetGRPOCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://electra-ai.com/CheckOnHand", RequestNamespace="http://electra-ai.com/", ResponseNamespace="http://electra-ai.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Data.DataSet CheckOnHand(string userId, string passWord, string databaseName, string outletCode, string itemCode) {
        object[] results = this.Invoke("CheckOnHand", new object[] {
                    userId,
                    passWord,
                    databaseName,
                    outletCode,
                    itemCode});
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginCheckOnHand(string userId, string passWord, string databaseName, string outletCode, string itemCode, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("CheckOnHand", new object[] {
                    userId,
                    passWord,
                    databaseName,
                    outletCode,
                    itemCode}, callback, asyncState);
    }
    
    /// <remarks/>
    public System.Data.DataSet EndCheckOnHand(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public void CheckOnHandAsync(string userId, string passWord, string databaseName, string outletCode, string itemCode) {
        this.CheckOnHandAsync(userId, passWord, databaseName, outletCode, itemCode, null);
    }
    
    /// <remarks/>
    public void CheckOnHandAsync(string userId, string passWord, string databaseName, string outletCode, string itemCode, object userState) {
        if ((this.CheckOnHandOperationCompleted == null)) {
            this.CheckOnHandOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckOnHandOperationCompleted);
        }
        this.InvokeAsync("CheckOnHand", new object[] {
                    userId,
                    passWord,
                    databaseName,
                    outletCode,
                    itemCode}, this.CheckOnHandOperationCompleted, userState);
    }
    
    private void OnCheckOnHandOperationCompleted(object arg) {
        if ((this.CheckOnHandCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.CheckOnHandCompleted(this, new CheckOnHandCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://electra-ai.com/GetItemStockTake", RequestNamespace="http://electra-ai.com/", ResponseNamespace="http://electra-ai.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Data.DataSet GetItemStockTake(string userId, string passWord, string databaseName, string outletCode, System.DateTime stockDate) {
        object[] results = this.Invoke("GetItemStockTake", new object[] {
                    userId,
                    passWord,
                    databaseName,
                    outletCode,
                    stockDate});
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetItemStockTake(string userId, string passWord, string databaseName, string outletCode, System.DateTime stockDate, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetItemStockTake", new object[] {
                    userId,
                    passWord,
                    databaseName,
                    outletCode,
                    stockDate}, callback, asyncState);
    }
    
    /// <remarks/>
    public System.Data.DataSet EndGetItemStockTake(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public void GetItemStockTakeAsync(string userId, string passWord, string databaseName, string outletCode, System.DateTime stockDate) {
        this.GetItemStockTakeAsync(userId, passWord, databaseName, outletCode, stockDate, null);
    }
    
    /// <remarks/>
    public void GetItemStockTakeAsync(string userId, string passWord, string databaseName, string outletCode, System.DateTime stockDate, object userState) {
        if ((this.GetItemStockTakeOperationCompleted == null)) {
            this.GetItemStockTakeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetItemStockTakeOperationCompleted);
        }
        this.InvokeAsync("GetItemStockTake", new object[] {
                    userId,
                    passWord,
                    databaseName,
                    outletCode,
                    stockDate}, this.GetItemStockTakeOperationCompleted, userState);
    }
    
    private void OnGetItemStockTakeOperationCompleted(object arg) {
        if ((this.GetItemStockTakeCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetItemStockTakeCompleted(this, new GetItemStockTakeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://electra-ai.com/GetItemCumulative", RequestNamespace="http://electra-ai.com/", ResponseNamespace="http://electra-ai.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Data.DataSet GetItemCumulative(string databaseName, string outletCode, System.DateTime strDate) {
        object[] results = this.Invoke("GetItemCumulative", new object[] {
                    databaseName,
                    outletCode,
                    strDate});
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetItemCumulative(string databaseName, string outletCode, System.DateTime strDate, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetItemCumulative", new object[] {
                    databaseName,
                    outletCode,
                    strDate}, callback, asyncState);
    }
    
    /// <remarks/>
    public System.Data.DataSet EndGetItemCumulative(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public void GetItemCumulativeAsync(string databaseName, string outletCode, System.DateTime strDate) {
        this.GetItemCumulativeAsync(databaseName, outletCode, strDate, null);
    }
    
    /// <remarks/>
    public void GetItemCumulativeAsync(string databaseName, string outletCode, System.DateTime strDate, object userState) {
        if ((this.GetItemCumulativeOperationCompleted == null)) {
            this.GetItemCumulativeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetItemCumulativeOperationCompleted);
        }
        this.InvokeAsync("GetItemCumulative", new object[] {
                    databaseName,
                    outletCode,
                    strDate}, this.GetItemCumulativeOperationCompleted, userState);
    }
    
    private void OnGetItemCumulativeOperationCompleted(object arg) {
        if ((this.GetItemCumulativeCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetItemCumulativeCompleted(this, new GetItemCumulativeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://electra-ai.com/GetStockTakeList", RequestNamespace="http://electra-ai.com/", ResponseNamespace="http://electra-ai.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Data.DataSet GetStockTakeList(string userId, string passWord, string databaseName) {
        object[] results = this.Invoke("GetStockTakeList", new object[] {
                    userId,
                    passWord,
                    databaseName});
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetStockTakeList(string userId, string passWord, string databaseName, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetStockTakeList", new object[] {
                    userId,
                    passWord,
                    databaseName}, callback, asyncState);
    }
    
    /// <remarks/>
    public System.Data.DataSet EndGetStockTakeList(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public void GetStockTakeListAsync(string userId, string passWord, string databaseName) {
        this.GetStockTakeListAsync(userId, passWord, databaseName, null);
    }
    
    /// <remarks/>
    public void GetStockTakeListAsync(string userId, string passWord, string databaseName, object userState) {
        if ((this.GetStockTakeListOperationCompleted == null)) {
            this.GetStockTakeListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStockTakeListOperationCompleted);
        }
        this.InvokeAsync("GetStockTakeList", new object[] {
                    userId,
                    passWord,
                    databaseName}, this.GetStockTakeListOperationCompleted, userState);
    }
    
    private void OnGetStockTakeListOperationCompleted(object arg) {
        if ((this.GetStockTakeListCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetStockTakeListCompleted(this, new GetStockTakeListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://electra-ai.com/GetStockTakeDraftDetail", RequestNamespace="http://electra-ai.com/", ResponseNamespace="http://electra-ai.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Data.DataSet GetStockTakeDraftDetail(string userId, string passWord, string databaseName, string outletCode, string docEntry) {
        object[] results = this.Invoke("GetStockTakeDraftDetail", new object[] {
                    userId,
                    passWord,
                    databaseName,
                    outletCode,
                    docEntry});
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetStockTakeDraftDetail(string userId, string passWord, string databaseName, string outletCode, string docEntry, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetStockTakeDraftDetail", new object[] {
                    userId,
                    passWord,
                    databaseName,
                    outletCode,
                    docEntry}, callback, asyncState);
    }
    
    /// <remarks/>
    public System.Data.DataSet EndGetStockTakeDraftDetail(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public void GetStockTakeDraftDetailAsync(string userId, string passWord, string databaseName, string outletCode, string docEntry) {
        this.GetStockTakeDraftDetailAsync(userId, passWord, databaseName, outletCode, docEntry, null);
    }
    
    /// <remarks/>
    public void GetStockTakeDraftDetailAsync(string userId, string passWord, string databaseName, string outletCode, string docEntry, object userState) {
        if ((this.GetStockTakeDraftDetailOperationCompleted == null)) {
            this.GetStockTakeDraftDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStockTakeDraftDetailOperationCompleted);
        }
        this.InvokeAsync("GetStockTakeDraftDetail", new object[] {
                    userId,
                    passWord,
                    databaseName,
                    outletCode,
                    docEntry}, this.GetStockTakeDraftDetailOperationCompleted, userState);
    }
    
    private void OnGetStockTakeDraftDetailOperationCompleted(object arg) {
        if ((this.GetStockTakeDraftDetailCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetStockTakeDraftDetailCompleted(this, new GetStockTakeDraftDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://electra-ai.com/GetStockTakeDetail", RequestNamespace="http://electra-ai.com/", ResponseNamespace="http://electra-ai.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Data.DataSet GetStockTakeDetail(string userId, string passWord, string databaseName, string outletCode, string docEntry) {
        object[] results = this.Invoke("GetStockTakeDetail", new object[] {
                    userId,
                    passWord,
                    databaseName,
                    outletCode,
                    docEntry});
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetStockTakeDetail(string userId, string passWord, string databaseName, string outletCode, string docEntry, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetStockTakeDetail", new object[] {
                    userId,
                    passWord,
                    databaseName,
                    outletCode,
                    docEntry}, callback, asyncState);
    }
    
    /// <remarks/>
    public System.Data.DataSet EndGetStockTakeDetail(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public void GetStockTakeDetailAsync(string userId, string passWord, string databaseName, string outletCode, string docEntry) {
        this.GetStockTakeDetailAsync(userId, passWord, databaseName, outletCode, docEntry, null);
    }
    
    /// <remarks/>
    public void GetStockTakeDetailAsync(string userId, string passWord, string databaseName, string outletCode, string docEntry, object userState) {
        if ((this.GetStockTakeDetailOperationCompleted == null)) {
            this.GetStockTakeDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStockTakeDetailOperationCompleted);
        }
        this.InvokeAsync("GetStockTakeDetail", new object[] {
                    userId,
                    passWord,
                    databaseName,
                    outletCode,
                    docEntry}, this.GetStockTakeDetailOperationCompleted, userState);
    }
    
    private void OnGetStockTakeDetailOperationCompleted(object arg) {
        if ((this.GetStockTakeDetailCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetStockTakeDetailCompleted(this, new GetStockTakeDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://electra-ai.com/GetLastPurchasePrice", RequestNamespace="http://electra-ai.com/", ResponseNamespace="http://electra-ai.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Data.DataSet GetLastPurchasePrice(string userId, string passWord, string databaseName) {
        object[] results = this.Invoke("GetLastPurchasePrice", new object[] {
                    userId,
                    passWord,
                    databaseName});
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetLastPurchasePrice(string userId, string passWord, string databaseName, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetLastPurchasePrice", new object[] {
                    userId,
                    passWord,
                    databaseName}, callback, asyncState);
    }
    
    /// <remarks/>
    public System.Data.DataSet EndGetLastPurchasePrice(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public void GetLastPurchasePriceAsync(string userId, string passWord, string databaseName) {
        this.GetLastPurchasePriceAsync(userId, passWord, databaseName, null);
    }
    
    /// <remarks/>
    public void GetLastPurchasePriceAsync(string userId, string passWord, string databaseName, object userState) {
        if ((this.GetLastPurchasePriceOperationCompleted == null)) {
            this.GetLastPurchasePriceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLastPurchasePriceOperationCompleted);
        }
        this.InvokeAsync("GetLastPurchasePrice", new object[] {
                    userId,
                    passWord,
                    databaseName}, this.GetLastPurchasePriceOperationCompleted, userState);
    }
    
    private void OnGetLastPurchasePriceOperationCompleted(object arg) {
        if ((this.GetLastPurchasePriceCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetLastPurchasePriceCompleted(this, new GetLastPurchasePriceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://electra-ai.com/GetLogo", RequestNamespace="http://electra-ai.com/", ResponseNamespace="http://electra-ai.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string GetLogo(string userId, string passWord, string databaseName) {
        object[] results = this.Invoke("GetLogo", new object[] {
                    userId,
                    passWord,
                    databaseName});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetLogo(string userId, string passWord, string databaseName, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetLogo", new object[] {
                    userId,
                    passWord,
                    databaseName}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndGetLogo(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void GetLogoAsync(string userId, string passWord, string databaseName) {
        this.GetLogoAsync(userId, passWord, databaseName, null);
    }
    
    /// <remarks/>
    public void GetLogoAsync(string userId, string passWord, string databaseName, object userState) {
        if ((this.GetLogoOperationCompleted == null)) {
            this.GetLogoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLogoOperationCompleted);
        }
        this.InvokeAsync("GetLogo", new object[] {
                    userId,
                    passWord,
                    databaseName}, this.GetLogoOperationCompleted, userState);
    }
    
    private void OnGetLogoOperationCompleted(object arg) {
        if ((this.GetLogoCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetLogoCompleted(this, new GetLogoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://electra-ai.com/GetDefaultWareHouse", RequestNamespace="http://electra-ai.com/", ResponseNamespace="http://electra-ai.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Data.DataSet GetDefaultWareHouse(string ItemCode, string company) {
        object[] results = this.Invoke("GetDefaultWareHouse", new object[] {
                    ItemCode,
                    company});
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetDefaultWareHouse(string ItemCode, string company, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetDefaultWareHouse", new object[] {
                    ItemCode,
                    company}, callback, asyncState);
    }
    
    /// <remarks/>
    public System.Data.DataSet EndGetDefaultWareHouse(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public void GetDefaultWareHouseAsync(string ItemCode, string company) {
        this.GetDefaultWareHouseAsync(ItemCode, company, null);
    }
    
    /// <remarks/>
    public void GetDefaultWareHouseAsync(string ItemCode, string company, object userState) {
        if ((this.GetDefaultWareHouseOperationCompleted == null)) {
            this.GetDefaultWareHouseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDefaultWareHouseOperationCompleted);
        }
        this.InvokeAsync("GetDefaultWareHouse", new object[] {
                    ItemCode,
                    company}, this.GetDefaultWareHouseOperationCompleted, userState);
    }
    
    private void OnGetDefaultWareHouseOperationCompleted(object arg) {
        if ((this.GetDefaultWareHouseCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetDefaultWareHouseCompleted(this, new GetDefaultWareHouseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://electra-ai.com/GetItem", RequestNamespace="http://electra-ai.com/", ResponseNamespace="http://electra-ai.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Data.DataSet GetItem(string userId, string passWord, string databaseName, System.DateTime PODate, string ItemCode, string VendorCode, double Quantity) {
        object[] results = this.Invoke("GetItem", new object[] {
                    userId,
                    passWord,
                    databaseName,
                    PODate,
                    ItemCode,
                    VendorCode,
                    Quantity});
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetItem(string userId, string passWord, string databaseName, System.DateTime PODate, string ItemCode, string VendorCode, double Quantity, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetItem", new object[] {
                    userId,
                    passWord,
                    databaseName,
                    PODate,
                    ItemCode,
                    VendorCode,
                    Quantity}, callback, asyncState);
    }
    
    /// <remarks/>
    public System.Data.DataSet EndGetItem(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public void GetItemAsync(string userId, string passWord, string databaseName, System.DateTime PODate, string ItemCode, string VendorCode, double Quantity) {
        this.GetItemAsync(userId, passWord, databaseName, PODate, ItemCode, VendorCode, Quantity, null);
    }
    
    /// <remarks/>
    public void GetItemAsync(string userId, string passWord, string databaseName, System.DateTime PODate, string ItemCode, string VendorCode, double Quantity, object userState) {
        if ((this.GetItemOperationCompleted == null)) {
            this.GetItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetItemOperationCompleted);
        }
        this.InvokeAsync("GetItem", new object[] {
                    userId,
                    passWord,
                    databaseName,
                    PODate,
                    ItemCode,
                    VendorCode,
                    Quantity}, this.GetItemOperationCompleted, userState);
    }
    
    private void OnGetItemOperationCompleted(object arg) {
        if ((this.GetItemCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetItemCompleted(this, new GetItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://electra-ai.com/GetAllItem", RequestNamespace="http://electra-ai.com/", ResponseNamespace="http://electra-ai.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Data.DataSet GetAllItem(string userId, string passWord, string databaseName, System.DateTime PODate, string VendorCode, System.Data.DataTable tb) {
        object[] results = this.Invoke("GetAllItem", new object[] {
                    userId,
                    passWord,
                    databaseName,
                    PODate,
                    VendorCode,
                    tb});
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetAllItem(string userId, string passWord, string databaseName, System.DateTime PODate, string VendorCode, System.Data.DataTable tb, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetAllItem", new object[] {
                    userId,
                    passWord,
                    databaseName,
                    PODate,
                    VendorCode,
                    tb}, callback, asyncState);
    }
    
    /// <remarks/>
    public System.Data.DataSet EndGetAllItem(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public void GetAllItemAsync(string userId, string passWord, string databaseName, System.DateTime PODate, string VendorCode, System.Data.DataTable tb) {
        this.GetAllItemAsync(userId, passWord, databaseName, PODate, VendorCode, tb, null);
    }
    
    /// <remarks/>
    public void GetAllItemAsync(string userId, string passWord, string databaseName, System.DateTime PODate, string VendorCode, System.Data.DataTable tb, object userState) {
        if ((this.GetAllItemOperationCompleted == null)) {
            this.GetAllItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllItemOperationCompleted);
        }
        this.InvokeAsync("GetAllItem", new object[] {
                    userId,
                    passWord,
                    databaseName,
                    PODate,
                    VendorCode,
                    tb}, this.GetAllItemOperationCompleted, userState);
    }
    
    private void OnGetAllItemOperationCompleted(object arg) {
        if ((this.GetAllItemCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetAllItemCompleted(this, new GetAllItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://electra-ai.com/GetItemEdit", RequestNamespace="http://electra-ai.com/", ResponseNamespace="http://electra-ai.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Data.DataSet GetItemEdit(string userId, string passWord, string databaseName, string ItemCode, string docEntry) {
        object[] results = this.Invoke("GetItemEdit", new object[] {
                    userId,
                    passWord,
                    databaseName,
                    ItemCode,
                    docEntry});
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetItemEdit(string userId, string passWord, string databaseName, string ItemCode, string docEntry, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetItemEdit", new object[] {
                    userId,
                    passWord,
                    databaseName,
                    ItemCode,
                    docEntry}, callback, asyncState);
    }
    
    /// <remarks/>
    public System.Data.DataSet EndGetItemEdit(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public void GetItemEditAsync(string userId, string passWord, string databaseName, string ItemCode, string docEntry) {
        this.GetItemEditAsync(userId, passWord, databaseName, ItemCode, docEntry, null);
    }
    
    /// <remarks/>
    public void GetItemEditAsync(string userId, string passWord, string databaseName, string ItemCode, string docEntry, object userState) {
        if ((this.GetItemEditOperationCompleted == null)) {
            this.GetItemEditOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetItemEditOperationCompleted);
        }
        this.InvokeAsync("GetItemEdit", new object[] {
                    userId,
                    passWord,
                    databaseName,
                    ItemCode,
                    docEntry}, this.GetItemEditOperationCompleted, userState);
    }
    
    private void OnGetItemEditOperationCompleted(object arg) {
        if ((this.GetItemEditCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetItemEditCompleted(this, new GetItemEditCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://electra-ai.com/CopyToGRPO", RequestNamespace="http://electra-ai.com/", ResponseNamespace="http://electra-ai.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Data.DataSet CopyToGRPO(string userId, string passWord, string databaseName, string DocEntry) {
        object[] results = this.Invoke("CopyToGRPO", new object[] {
                    userId,
                    passWord,
                    databaseName,
                    DocEntry});
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginCopyToGRPO(string userId, string passWord, string databaseName, string DocEntry, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("CopyToGRPO", new object[] {
                    userId,
                    passWord,
                    databaseName,
                    DocEntry}, callback, asyncState);
    }
    
    /// <remarks/>
    public System.Data.DataSet EndCopyToGRPO(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public void CopyToGRPOAsync(string userId, string passWord, string databaseName, string DocEntry) {
        this.CopyToGRPOAsync(userId, passWord, databaseName, DocEntry, null);
    }
    
    /// <remarks/>
    public void CopyToGRPOAsync(string userId, string passWord, string databaseName, string DocEntry, object userState) {
        if ((this.CopyToGRPOOperationCompleted == null)) {
            this.CopyToGRPOOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCopyToGRPOOperationCompleted);
        }
        this.InvokeAsync("CopyToGRPO", new object[] {
                    userId,
                    passWord,
                    databaseName,
                    DocEntry}, this.CopyToGRPOOperationCompleted, userState);
    }
    
    private void OnCopyToGRPOOperationCompleted(object arg) {
        if ((this.CopyToGRPOCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.CopyToGRPOCompleted(this, new CopyToGRPOCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://electra-ai.com/GetGRPOUpdate", RequestNamespace="http://electra-ai.com/", ResponseNamespace="http://electra-ai.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Data.DataSet GetGRPOUpdate(string databaseName, string DocEntry) {
        object[] results = this.Invoke("GetGRPOUpdate", new object[] {
                    databaseName,
                    DocEntry});
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetGRPOUpdate(string databaseName, string DocEntry, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetGRPOUpdate", new object[] {
                    databaseName,
                    DocEntry}, callback, asyncState);
    }
    
    /// <remarks/>
    public System.Data.DataSet EndGetGRPOUpdate(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public void GetGRPOUpdateAsync(string databaseName, string DocEntry) {
        this.GetGRPOUpdateAsync(databaseName, DocEntry, null);
    }
    
    /// <remarks/>
    public void GetGRPOUpdateAsync(string databaseName, string DocEntry, object userState) {
        if ((this.GetGRPOUpdateOperationCompleted == null)) {
            this.GetGRPOUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGRPOUpdateOperationCompleted);
        }
        this.InvokeAsync("GetGRPOUpdate", new object[] {
                    databaseName,
                    DocEntry}, this.GetGRPOUpdateOperationCompleted, userState);
    }
    
    private void OnGetGRPOUpdateOperationCompleted(object arg) {
        if ((this.GetGRPOUpdateCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetGRPOUpdateCompleted(this, new GetGRPOUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://electra-ai.com/GetPODataUpdate", RequestNamespace="http://electra-ai.com/", ResponseNamespace="http://electra-ai.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Data.DataSet GetPODataUpdate(string userId, string passWord, string databaseName, string DocEntry) {
        object[] results = this.Invoke("GetPODataUpdate", new object[] {
                    userId,
                    passWord,
                    databaseName,
                    DocEntry});
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetPODataUpdate(string userId, string passWord, string databaseName, string DocEntry, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetPODataUpdate", new object[] {
                    userId,
                    passWord,
                    databaseName,
                    DocEntry}, callback, asyncState);
    }
    
    /// <remarks/>
    public System.Data.DataSet EndGetPODataUpdate(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public void GetPODataUpdateAsync(string userId, string passWord, string databaseName, string DocEntry) {
        this.GetPODataUpdateAsync(userId, passWord, databaseName, DocEntry, null);
    }
    
    /// <remarks/>
    public void GetPODataUpdateAsync(string userId, string passWord, string databaseName, string DocEntry, object userState) {
        if ((this.GetPODataUpdateOperationCompleted == null)) {
            this.GetPODataUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPODataUpdateOperationCompleted);
        }
        this.InvokeAsync("GetPODataUpdate", new object[] {
                    userId,
                    passWord,
                    databaseName,
                    DocEntry}, this.GetPODataUpdateOperationCompleted, userState);
    }
    
    private void OnGetPODataUpdateOperationCompleted(object arg) {
        if ((this.GetPODataUpdateCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetPODataUpdateCompleted(this, new GetPODataUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://electra-ai.com/GetPODraftUpdate", RequestNamespace="http://electra-ai.com/", ResponseNamespace="http://electra-ai.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Data.DataSet GetPODraftUpdate(string userId, string passWord, string databaseName, string DocEntry) {
        object[] results = this.Invoke("GetPODraftUpdate", new object[] {
                    userId,
                    passWord,
                    databaseName,
                    DocEntry});
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetPODraftUpdate(string userId, string passWord, string databaseName, string DocEntry, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetPODraftUpdate", new object[] {
                    userId,
                    passWord,
                    databaseName,
                    DocEntry}, callback, asyncState);
    }
    
    /// <remarks/>
    public System.Data.DataSet EndGetPODraftUpdate(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public void GetPODraftUpdateAsync(string userId, string passWord, string databaseName, string DocEntry) {
        this.GetPODraftUpdateAsync(userId, passWord, databaseName, DocEntry, null);
    }
    
    /// <remarks/>
    public void GetPODraftUpdateAsync(string userId, string passWord, string databaseName, string DocEntry, object userState) {
        if ((this.GetPODraftUpdateOperationCompleted == null)) {
            this.GetPODraftUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPODraftUpdateOperationCompleted);
        }
        this.InvokeAsync("GetPODraftUpdate", new object[] {
                    userId,
                    passWord,
                    databaseName,
                    DocEntry}, this.GetPODraftUpdateOperationCompleted, userState);
    }
    
    private void OnGetPODraftUpdateOperationCompleted(object arg) {
        if ((this.GetPODraftUpdateCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetPODraftUpdateCompleted(this, new GetPODraftUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://electra-ai.com/GetOutletCalendar", RequestNamespace="http://electra-ai.com/", ResponseNamespace="http://electra-ai.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Data.DataSet GetOutletCalendar(string userId, string passWord, string cardCode, string companyCode, string databaseName) {
        object[] results = this.Invoke("GetOutletCalendar", new object[] {
                    userId,
                    passWord,
                    cardCode,
                    companyCode,
                    databaseName});
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetOutletCalendar(string userId, string passWord, string cardCode, string companyCode, string databaseName, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetOutletCalendar", new object[] {
                    userId,
                    passWord,
                    cardCode,
                    companyCode,
                    databaseName}, callback, asyncState);
    }
    
    /// <remarks/>
    public System.Data.DataSet EndGetOutletCalendar(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public void GetOutletCalendarAsync(string userId, string passWord, string cardCode, string companyCode, string databaseName) {
        this.GetOutletCalendarAsync(userId, passWord, cardCode, companyCode, databaseName, null);
    }
    
    /// <remarks/>
    public void GetOutletCalendarAsync(string userId, string passWord, string cardCode, string companyCode, string databaseName, object userState) {
        if ((this.GetOutletCalendarOperationCompleted == null)) {
            this.GetOutletCalendarOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOutletCalendarOperationCompleted);
        }
        this.InvokeAsync("GetOutletCalendar", new object[] {
                    userId,
                    passWord,
                    cardCode,
                    companyCode,
                    databaseName}, this.GetOutletCalendarOperationCompleted, userState);
    }
    
    private void OnGetOutletCalendarOperationCompleted(object arg) {
        if ((this.GetOutletCalendarCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetOutletCalendarCompleted(this, new GetOutletCalendarCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://electra-ai.com/GetOutletAmount", RequestNamespace="http://electra-ai.com/", ResponseNamespace="http://electra-ai.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Data.DataSet GetOutletAmount(string userId, string passWord, string cardCode, string companyCode, string databaseName) {
        object[] results = this.Invoke("GetOutletAmount", new object[] {
                    userId,
                    passWord,
                    cardCode,
                    companyCode,
                    databaseName});
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetOutletAmount(string userId, string passWord, string cardCode, string companyCode, string databaseName, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetOutletAmount", new object[] {
                    userId,
                    passWord,
                    cardCode,
                    companyCode,
                    databaseName}, callback, asyncState);
    }
    
    /// <remarks/>
    public System.Data.DataSet EndGetOutletAmount(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public void GetOutletAmountAsync(string userId, string passWord, string cardCode, string companyCode, string databaseName) {
        this.GetOutletAmountAsync(userId, passWord, cardCode, companyCode, databaseName, null);
    }
    
    /// <remarks/>
    public void GetOutletAmountAsync(string userId, string passWord, string cardCode, string companyCode, string databaseName, object userState) {
        if ((this.GetOutletAmountOperationCompleted == null)) {
            this.GetOutletAmountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOutletAmountOperationCompleted);
        }
        this.InvokeAsync("GetOutletAmount", new object[] {
                    userId,
                    passWord,
                    cardCode,
                    companyCode,
                    databaseName}, this.GetOutletAmountOperationCompleted, userState);
    }
    
    private void OnGetOutletAmountOperationCompleted(object arg) {
        if ((this.GetOutletAmountCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetOutletAmountCompleted(this, new GetOutletAmountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://electra-ai.com/GetOutletSupplier", RequestNamespace="http://electra-ai.com/", ResponseNamespace="http://electra-ai.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Data.DataSet GetOutletSupplier(string userId, string passWord, string cardCode, string companyCode, string databaseName) {
        object[] results = this.Invoke("GetOutletSupplier", new object[] {
                    userId,
                    passWord,
                    cardCode,
                    companyCode,
                    databaseName});
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetOutletSupplier(string userId, string passWord, string cardCode, string companyCode, string databaseName, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetOutletSupplier", new object[] {
                    userId,
                    passWord,
                    cardCode,
                    companyCode,
                    databaseName}, callback, asyncState);
    }
    
    /// <remarks/>
    public System.Data.DataSet EndGetOutletSupplier(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public void GetOutletSupplierAsync(string userId, string passWord, string cardCode, string companyCode, string databaseName) {
        this.GetOutletSupplierAsync(userId, passWord, cardCode, companyCode, databaseName, null);
    }
    
    /// <remarks/>
    public void GetOutletSupplierAsync(string userId, string passWord, string cardCode, string companyCode, string databaseName, object userState) {
        if ((this.GetOutletSupplierOperationCompleted == null)) {
            this.GetOutletSupplierOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOutletSupplierOperationCompleted);
        }
        this.InvokeAsync("GetOutletSupplier", new object[] {
                    userId,
                    passWord,
                    cardCode,
                    companyCode,
                    databaseName}, this.GetOutletSupplierOperationCompleted, userState);
    }
    
    private void OnGetOutletSupplierOperationCompleted(object arg) {
        if ((this.GetOutletSupplierCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetOutletSupplierCompleted(this, new GetOutletSupplierCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://electra-ai.com/GetItemOutletSetup", RequestNamespace="http://electra-ai.com/", ResponseNamespace="http://electra-ai.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Data.DataSet GetItemOutletSetup(string userId, string passWord, string databaseName, string ItemCode) {
        object[] results = this.Invoke("GetItemOutletSetup", new object[] {
                    userId,
                    passWord,
                    databaseName,
                    ItemCode});
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetItemOutletSetup(string userId, string passWord, string databaseName, string ItemCode, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetItemOutletSetup", new object[] {
                    userId,
                    passWord,
                    databaseName,
                    ItemCode}, callback, asyncState);
    }
    
    /// <remarks/>
    public System.Data.DataSet EndGetItemOutletSetup(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public void GetItemOutletSetupAsync(string userId, string passWord, string databaseName, string ItemCode) {
        this.GetItemOutletSetupAsync(userId, passWord, databaseName, ItemCode, null);
    }
    
    /// <remarks/>
    public void GetItemOutletSetupAsync(string userId, string passWord, string databaseName, string ItemCode, object userState) {
        if ((this.GetItemOutletSetupOperationCompleted == null)) {
            this.GetItemOutletSetupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetItemOutletSetupOperationCompleted);
        }
        this.InvokeAsync("GetItemOutletSetup", new object[] {
                    userId,
                    passWord,
                    databaseName,
                    ItemCode}, this.GetItemOutletSetupOperationCompleted, userState);
    }
    
    private void OnGetItemOutletSetupOperationCompleted(object arg) {
        if ((this.GetItemOutletSetupCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetItemOutletSetupCompleted(this, new GetItemOutletSetupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://electra-ai.com/GetSupplierOutletSetup", RequestNamespace="http://electra-ai.com/", ResponseNamespace="http://electra-ai.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Data.DataSet GetSupplierOutletSetup(string companyCode, string outletCode) {
        object[] results = this.Invoke("GetSupplierOutletSetup", new object[] {
                    companyCode,
                    outletCode});
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetSupplierOutletSetup(string companyCode, string outletCode, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetSupplierOutletSetup", new object[] {
                    companyCode,
                    outletCode}, callback, asyncState);
    }
    
    /// <remarks/>
    public System.Data.DataSet EndGetSupplierOutletSetup(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public void GetSupplierOutletSetupAsync(string companyCode, string outletCode) {
        this.GetSupplierOutletSetupAsync(companyCode, outletCode, null);
    }
    
    /// <remarks/>
    public void GetSupplierOutletSetupAsync(string companyCode, string outletCode, object userState) {
        if ((this.GetSupplierOutletSetupOperationCompleted == null)) {
            this.GetSupplierOutletSetupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSupplierOutletSetupOperationCompleted);
        }
        this.InvokeAsync("GetSupplierOutletSetup", new object[] {
                    companyCode,
                    outletCode}, this.GetSupplierOutletSetupOperationCompleted, userState);
    }
    
    private void OnGetSupplierOutletSetupOperationCompleted(object arg) {
        if ((this.GetSupplierOutletSetupCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetSupplierOutletSetupCompleted(this, new GetSupplierOutletSetupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://electra-ai.com/GetSupplierItemSetup", RequestNamespace="http://electra-ai.com/", ResponseNamespace="http://electra-ai.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Data.DataSet GetSupplierItemSetup(string userId, string passWord, string databaseName, string cardCode, string WhsCode, System.DateTime DocDate) {
        object[] results = this.Invoke("GetSupplierItemSetup", new object[] {
                    userId,
                    passWord,
                    databaseName,
                    cardCode,
                    WhsCode,
                    DocDate});
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetSupplierItemSetup(string userId, string passWord, string databaseName, string cardCode, string WhsCode, System.DateTime DocDate, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetSupplierItemSetup", new object[] {
                    userId,
                    passWord,
                    databaseName,
                    cardCode,
                    WhsCode,
                    DocDate}, callback, asyncState);
    }
    
    /// <remarks/>
    public System.Data.DataSet EndGetSupplierItemSetup(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public void GetSupplierItemSetupAsync(string userId, string passWord, string databaseName, string cardCode, string WhsCode, System.DateTime DocDate) {
        this.GetSupplierItemSetupAsync(userId, passWord, databaseName, cardCode, WhsCode, DocDate, null);
    }
    
    /// <remarks/>
    public void GetSupplierItemSetupAsync(string userId, string passWord, string databaseName, string cardCode, string WhsCode, System.DateTime DocDate, object userState) {
        if ((this.GetSupplierItemSetupOperationCompleted == null)) {
            this.GetSupplierItemSetupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSupplierItemSetupOperationCompleted);
        }
        this.InvokeAsync("GetSupplierItemSetup", new object[] {
                    userId,
                    passWord,
                    databaseName,
                    cardCode,
                    WhsCode,
                    DocDate}, this.GetSupplierItemSetupOperationCompleted, userState);
    }
    
    private void OnGetSupplierItemSetupOperationCompleted(object arg) {
        if ((this.GetSupplierItemSetupCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetSupplierItemSetupCompleted(this, new GetSupplierItemSetupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://electra-ai.com/GetOutletItemList", RequestNamespace="http://electra-ai.com/", ResponseNamespace="http://electra-ai.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Data.DataSet GetOutletItemList(string userId, string passWord, string cardCode, string companyCode, string itemCode) {
        object[] results = this.Invoke("GetOutletItemList", new object[] {
                    userId,
                    passWord,
                    cardCode,
                    companyCode,
                    itemCode});
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetOutletItemList(string userId, string passWord, string cardCode, string companyCode, string itemCode, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetOutletItemList", new object[] {
                    userId,
                    passWord,
                    cardCode,
                    companyCode,
                    itemCode}, callback, asyncState);
    }
    
    /// <remarks/>
    public System.Data.DataSet EndGetOutletItemList(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public void GetOutletItemListAsync(string userId, string passWord, string cardCode, string companyCode, string itemCode) {
        this.GetOutletItemListAsync(userId, passWord, cardCode, companyCode, itemCode, null);
    }
    
    /// <remarks/>
    public void GetOutletItemListAsync(string userId, string passWord, string cardCode, string companyCode, string itemCode, object userState) {
        if ((this.GetOutletItemListOperationCompleted == null)) {
            this.GetOutletItemListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOutletItemListOperationCompleted);
        }
        this.InvokeAsync("GetOutletItemList", new object[] {
                    userId,
                    passWord,
                    cardCode,
                    companyCode,
                    itemCode}, this.GetOutletItemListOperationCompleted, userState);
    }
    
    private void OnGetOutletItemListOperationCompleted(object arg) {
        if ((this.GetOutletItemListCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetOutletItemListCompleted(this, new GetOutletItemListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://electra-ai.com/CheckAddPO", RequestNamespace="http://electra-ai.com/", ResponseNamespace="http://electra-ai.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string CheckAddPO(string userId, string passWord, string companyCode, System.Data.DataSet data, System.DateTime docDueDate, bool isUpdate, string docEntry) {
        object[] results = this.Invoke("CheckAddPO", new object[] {
                    userId,
                    passWord,
                    companyCode,
                    data,
                    docDueDate,
                    isUpdate,
                    docEntry});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginCheckAddPO(string userId, string passWord, string companyCode, System.Data.DataSet data, System.DateTime docDueDate, bool isUpdate, string docEntry, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("CheckAddPO", new object[] {
                    userId,
                    passWord,
                    companyCode,
                    data,
                    docDueDate,
                    isUpdate,
                    docEntry}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndCheckAddPO(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void CheckAddPOAsync(string userId, string passWord, string companyCode, System.Data.DataSet data, System.DateTime docDueDate, bool isUpdate, string docEntry) {
        this.CheckAddPOAsync(userId, passWord, companyCode, data, docDueDate, isUpdate, docEntry, null);
    }
    
    /// <remarks/>
    public void CheckAddPOAsync(string userId, string passWord, string companyCode, System.Data.DataSet data, System.DateTime docDueDate, bool isUpdate, string docEntry, object userState) {
        if ((this.CheckAddPOOperationCompleted == null)) {
            this.CheckAddPOOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckAddPOOperationCompleted);
        }
        this.InvokeAsync("CheckAddPO", new object[] {
                    userId,
                    passWord,
                    companyCode,
                    data,
                    docDueDate,
                    isUpdate,
                    docEntry}, this.CheckAddPOOperationCompleted, userState);
    }
    
    private void OnCheckAddPOOperationCompleted(object arg) {
        if ((this.CheckAddPOCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.CheckAddPOCompleted(this, new CheckAddPOCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://electra-ai.com/GetSupplierAmount", RequestNamespace="http://electra-ai.com/", ResponseNamespace="http://electra-ai.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Data.DataSet GetSupplierAmount(string cardCode, string companyCode, string outletCode) {
        object[] results = this.Invoke("GetSupplierAmount", new object[] {
                    cardCode,
                    companyCode,
                    outletCode});
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetSupplierAmount(string cardCode, string companyCode, string outletCode, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetSupplierAmount", new object[] {
                    cardCode,
                    companyCode,
                    outletCode}, callback, asyncState);
    }
    
    /// <remarks/>
    public System.Data.DataSet EndGetSupplierAmount(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public void GetSupplierAmountAsync(string cardCode, string companyCode, string outletCode) {
        this.GetSupplierAmountAsync(cardCode, companyCode, outletCode, null);
    }
    
    /// <remarks/>
    public void GetSupplierAmountAsync(string cardCode, string companyCode, string outletCode, object userState) {
        if ((this.GetSupplierAmountOperationCompleted == null)) {
            this.GetSupplierAmountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSupplierAmountOperationCompleted);
        }
        this.InvokeAsync("GetSupplierAmount", new object[] {
                    cardCode,
                    companyCode,
                    outletCode}, this.GetSupplierAmountOperationCompleted, userState);
    }
    
    private void OnGetSupplierAmountOperationCompleted(object arg) {
        if ((this.GetSupplierAmountCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetSupplierAmountCompleted(this, new GetSupplierAmountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://electra-ai.com/UpdateOutletCalendar", RequestNamespace="http://electra-ai.com/", ResponseNamespace="http://electra-ai.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string UpdateOutletCalendar(string userId, string passWord, string cardCode, string cardName, string companyCode, string companyName, System.Data.DataSet data, string isUpdate, string databaseName) {
        object[] results = this.Invoke("UpdateOutletCalendar", new object[] {
                    userId,
                    passWord,
                    cardCode,
                    cardName,
                    companyCode,
                    companyName,
                    data,
                    isUpdate,
                    databaseName});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginUpdateOutletCalendar(string userId, string passWord, string cardCode, string cardName, string companyCode, string companyName, System.Data.DataSet data, string isUpdate, string databaseName, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("UpdateOutletCalendar", new object[] {
                    userId,
                    passWord,
                    cardCode,
                    cardName,
                    companyCode,
                    companyName,
                    data,
                    isUpdate,
                    databaseName}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndUpdateOutletCalendar(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void UpdateOutletCalendarAsync(string userId, string passWord, string cardCode, string cardName, string companyCode, string companyName, System.Data.DataSet data, string isUpdate, string databaseName) {
        this.UpdateOutletCalendarAsync(userId, passWord, cardCode, cardName, companyCode, companyName, data, isUpdate, databaseName, null);
    }
    
    /// <remarks/>
    public void UpdateOutletCalendarAsync(string userId, string passWord, string cardCode, string cardName, string companyCode, string companyName, System.Data.DataSet data, string isUpdate, string databaseName, object userState) {
        if ((this.UpdateOutletCalendarOperationCompleted == null)) {
            this.UpdateOutletCalendarOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateOutletCalendarOperationCompleted);
        }
        this.InvokeAsync("UpdateOutletCalendar", new object[] {
                    userId,
                    passWord,
                    cardCode,
                    cardName,
                    companyCode,
                    companyName,
                    data,
                    isUpdate,
                    databaseName}, this.UpdateOutletCalendarOperationCompleted, userState);
    }
    
    private void OnUpdateOutletCalendarOperationCompleted(object arg) {
        if ((this.UpdateOutletCalendarCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.UpdateOutletCalendarCompleted(this, new UpdateOutletCalendarCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://electra-ai.com/UpdateOutletOrderAmount", RequestNamespace="http://electra-ai.com/", ResponseNamespace="http://electra-ai.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string UpdateOutletOrderAmount(string userId, string passWord, string cardCode, string cardName, string companyCode, string companyName, System.Data.DataSet data, string isUpdate, string databaseName) {
        object[] results = this.Invoke("UpdateOutletOrderAmount", new object[] {
                    userId,
                    passWord,
                    cardCode,
                    cardName,
                    companyCode,
                    companyName,
                    data,
                    isUpdate,
                    databaseName});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginUpdateOutletOrderAmount(string userId, string passWord, string cardCode, string cardName, string companyCode, string companyName, System.Data.DataSet data, string isUpdate, string databaseName, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("UpdateOutletOrderAmount", new object[] {
                    userId,
                    passWord,
                    cardCode,
                    cardName,
                    companyCode,
                    companyName,
                    data,
                    isUpdate,
                    databaseName}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndUpdateOutletOrderAmount(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void UpdateOutletOrderAmountAsync(string userId, string passWord, string cardCode, string cardName, string companyCode, string companyName, System.Data.DataSet data, string isUpdate, string databaseName) {
        this.UpdateOutletOrderAmountAsync(userId, passWord, cardCode, cardName, companyCode, companyName, data, isUpdate, databaseName, null);
    }
    
    /// <remarks/>
    public void UpdateOutletOrderAmountAsync(string userId, string passWord, string cardCode, string cardName, string companyCode, string companyName, System.Data.DataSet data, string isUpdate, string databaseName, object userState) {
        if ((this.UpdateOutletOrderAmountOperationCompleted == null)) {
            this.UpdateOutletOrderAmountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateOutletOrderAmountOperationCompleted);
        }
        this.InvokeAsync("UpdateOutletOrderAmount", new object[] {
                    userId,
                    passWord,
                    cardCode,
                    cardName,
                    companyCode,
                    companyName,
                    data,
                    isUpdate,
                    databaseName}, this.UpdateOutletOrderAmountOperationCompleted, userState);
    }
    
    private void OnUpdateOutletOrderAmountOperationCompleted(object arg) {
        if ((this.UpdateOutletOrderAmountCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.UpdateOutletOrderAmountCompleted(this, new UpdateOutletOrderAmountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://electra-ai.com/UpdateOutletItemList", RequestNamespace="http://electra-ai.com/", ResponseNamespace="http://electra-ai.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string UpdateOutletItemList(string userId, string passWord, int Id, string cardCode, string cardName, string companyCode, string companyName, System.Data.DataSet data, string isUpdate, string databaseName) {
        object[] results = this.Invoke("UpdateOutletItemList", new object[] {
                    userId,
                    passWord,
                    Id,
                    cardCode,
                    cardName,
                    companyCode,
                    companyName,
                    data,
                    isUpdate,
                    databaseName});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginUpdateOutletItemList(string userId, string passWord, int Id, string cardCode, string cardName, string companyCode, string companyName, System.Data.DataSet data, string isUpdate, string databaseName, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("UpdateOutletItemList", new object[] {
                    userId,
                    passWord,
                    Id,
                    cardCode,
                    cardName,
                    companyCode,
                    companyName,
                    data,
                    isUpdate,
                    databaseName}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndUpdateOutletItemList(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void UpdateOutletItemListAsync(string userId, string passWord, int Id, string cardCode, string cardName, string companyCode, string companyName, System.Data.DataSet data, string isUpdate, string databaseName) {
        this.UpdateOutletItemListAsync(userId, passWord, Id, cardCode, cardName, companyCode, companyName, data, isUpdate, databaseName, null);
    }
    
    /// <remarks/>
    public void UpdateOutletItemListAsync(string userId, string passWord, int Id, string cardCode, string cardName, string companyCode, string companyName, System.Data.DataSet data, string isUpdate, string databaseName, object userState) {
        if ((this.UpdateOutletItemListOperationCompleted == null)) {
            this.UpdateOutletItemListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateOutletItemListOperationCompleted);
        }
        this.InvokeAsync("UpdateOutletItemList", new object[] {
                    userId,
                    passWord,
                    Id,
                    cardCode,
                    cardName,
                    companyCode,
                    companyName,
                    data,
                    isUpdate,
                    databaseName}, this.UpdateOutletItemListOperationCompleted, userState);
    }
    
    private void OnUpdateOutletItemListOperationCompleted(object arg) {
        if ((this.UpdateOutletItemListCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.UpdateOutletItemListCompleted(this, new UpdateOutletItemListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://electra-ai.com/InsertABDeliveryOrder", RequestNamespace="http://electra-ai.com/", ResponseNamespace="http://electra-ai.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string InsertABDeliveryOrder(string userId, string passWord, string databaseName, System.Data.DataSet data) {
        object[] results = this.Invoke("InsertABDeliveryOrder", new object[] {
                    userId,
                    passWord,
                    databaseName,
                    data});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginInsertABDeliveryOrder(string userId, string passWord, string databaseName, System.Data.DataSet data, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("InsertABDeliveryOrder", new object[] {
                    userId,
                    passWord,
                    databaseName,
                    data}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndInsertABDeliveryOrder(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void InsertABDeliveryOrderAsync(string userId, string passWord, string databaseName, System.Data.DataSet data) {
        this.InsertABDeliveryOrderAsync(userId, passWord, databaseName, data, null);
    }
    
    /// <remarks/>
    public void InsertABDeliveryOrderAsync(string userId, string passWord, string databaseName, System.Data.DataSet data, object userState) {
        if ((this.InsertABDeliveryOrderOperationCompleted == null)) {
            this.InsertABDeliveryOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertABDeliveryOrderOperationCompleted);
        }
        this.InvokeAsync("InsertABDeliveryOrder", new object[] {
                    userId,
                    passWord,
                    databaseName,
                    data}, this.InsertABDeliveryOrderOperationCompleted, userState);
    }
    
    private void OnInsertABDeliveryOrderOperationCompleted(object arg) {
        if ((this.InsertABDeliveryOrderCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.InsertABDeliveryOrderCompleted(this, new InsertABDeliveryOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://electra-ai.com/DeleteVendorSetup", RequestNamespace="http://electra-ai.com/", ResponseNamespace="http://electra-ai.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string DeleteVendorSetup(string companyCode, string vendorCode) {
        object[] results = this.Invoke("DeleteVendorSetup", new object[] {
                    companyCode,
                    vendorCode});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginDeleteVendorSetup(string companyCode, string vendorCode, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("DeleteVendorSetup", new object[] {
                    companyCode,
                    vendorCode}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndDeleteVendorSetup(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void DeleteVendorSetupAsync(string companyCode, string vendorCode) {
        this.DeleteVendorSetupAsync(companyCode, vendorCode, null);
    }
    
    /// <remarks/>
    public void DeleteVendorSetupAsync(string companyCode, string vendorCode, object userState) {
        if ((this.DeleteVendorSetupOperationCompleted == null)) {
            this.DeleteVendorSetupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteVendorSetupOperationCompleted);
        }
        this.InvokeAsync("DeleteVendorSetup", new object[] {
                    companyCode,
                    vendorCode}, this.DeleteVendorSetupOperationCompleted, userState);
    }
    
    private void OnDeleteVendorSetupOperationCompleted(object arg) {
        if ((this.DeleteVendorSetupCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.DeleteVendorSetupCompleted(this, new DeleteVendorSetupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://electra-ai.com/GetPOByDocEntry", RequestNamespace="http://electra-ai.com/", ResponseNamespace="http://electra-ai.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Data.DataSet GetPOByDocEntry(string userId, string passWord, string databaseName, int docEntry) {
        object[] results = this.Invoke("GetPOByDocEntry", new object[] {
                    userId,
                    passWord,
                    databaseName,
                    docEntry});
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetPOByDocEntry(string userId, string passWord, string databaseName, int docEntry, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetPOByDocEntry", new object[] {
                    userId,
                    passWord,
                    databaseName,
                    docEntry}, callback, asyncState);
    }
    
    /// <remarks/>
    public System.Data.DataSet EndGetPOByDocEntry(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public void GetPOByDocEntryAsync(string userId, string passWord, string databaseName, int docEntry) {
        this.GetPOByDocEntryAsync(userId, passWord, databaseName, docEntry, null);
    }
    
    /// <remarks/>
    public void GetPOByDocEntryAsync(string userId, string passWord, string databaseName, int docEntry, object userState) {
        if ((this.GetPOByDocEntryOperationCompleted == null)) {
            this.GetPOByDocEntryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPOByDocEntryOperationCompleted);
        }
        this.InvokeAsync("GetPOByDocEntry", new object[] {
                    userId,
                    passWord,
                    databaseName,
                    docEntry}, this.GetPOByDocEntryOperationCompleted, userState);
    }
    
    private void OnGetPOByDocEntryOperationCompleted(object arg) {
        if ((this.GetPOByDocEntryCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetPOByDocEntryCompleted(this, new GetPOByDocEntryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://electra-ai.com/GetRouteHolding", RequestNamespace="http://electra-ai.com/", ResponseNamespace="http://electra-ai.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Data.DataSet GetRouteHolding() {
        object[] results = this.Invoke("GetRouteHolding", new object[0]);
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetRouteHolding(System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetRouteHolding", new object[0], callback, asyncState);
    }
    
    /// <remarks/>
    public System.Data.DataSet EndGetRouteHolding(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public void GetRouteHoldingAsync() {
        this.GetRouteHoldingAsync(null);
    }
    
    /// <remarks/>
    public void GetRouteHoldingAsync(object userState) {
        if ((this.GetRouteHoldingOperationCompleted == null)) {
            this.GetRouteHoldingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRouteHoldingOperationCompleted);
        }
        this.InvokeAsync("GetRouteHolding", new object[0], this.GetRouteHoldingOperationCompleted, userState);
    }
    
    private void OnGetRouteHoldingOperationCompleted(object arg) {
        if ((this.GetRouteHoldingCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetRouteHoldingCompleted(this, new GetRouteHoldingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://electra-ai.com/GetDriverNo", RequestNamespace="http://electra-ai.com/", ResponseNamespace="http://electra-ai.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Data.DataSet GetDriverNo(string route, string truckCategory) {
        object[] results = this.Invoke("GetDriverNo", new object[] {
                    route,
                    truckCategory});
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetDriverNo(string route, string truckCategory, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetDriverNo", new object[] {
                    route,
                    truckCategory}, callback, asyncState);
    }
    
    /// <remarks/>
    public System.Data.DataSet EndGetDriverNo(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public void GetDriverNoAsync(string route, string truckCategory) {
        this.GetDriverNoAsync(route, truckCategory, null);
    }
    
    /// <remarks/>
    public void GetDriverNoAsync(string route, string truckCategory, object userState) {
        if ((this.GetDriverNoOperationCompleted == null)) {
            this.GetDriverNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDriverNoOperationCompleted);
        }
        this.InvokeAsync("GetDriverNo", new object[] {
                    route,
                    truckCategory}, this.GetDriverNoOperationCompleted, userState);
    }
    
    private void OnGetDriverNoOperationCompleted(object arg) {
        if ((this.GetDriverNoCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetDriverNoCompleted(this, new GetDriverNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://electra-ai.com/GetBlock", RequestNamespace="http://electra-ai.com/", ResponseNamespace="http://electra-ai.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Data.DataSet GetBlock(string userId, string passWord, string databaseName, string cardCode, string address) {
        object[] results = this.Invoke("GetBlock", new object[] {
                    userId,
                    passWord,
                    databaseName,
                    cardCode,
                    address});
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetBlock(string userId, string passWord, string databaseName, string cardCode, string address, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetBlock", new object[] {
                    userId,
                    passWord,
                    databaseName,
                    cardCode,
                    address}, callback, asyncState);
    }
    
    /// <remarks/>
    public System.Data.DataSet EndGetBlock(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public void GetBlockAsync(string userId, string passWord, string databaseName, string cardCode, string address) {
        this.GetBlockAsync(userId, passWord, databaseName, cardCode, address, null);
    }
    
    /// <remarks/>
    public void GetBlockAsync(string userId, string passWord, string databaseName, string cardCode, string address, object userState) {
        if ((this.GetBlockOperationCompleted == null)) {
            this.GetBlockOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBlockOperationCompleted);
        }
        this.InvokeAsync("GetBlock", new object[] {
                    userId,
                    passWord,
                    databaseName,
                    cardCode,
                    address}, this.GetBlockOperationCompleted, userState);
    }
    
    private void OnGetBlockOperationCompleted(object arg) {
        if ((this.GetBlockCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetBlockCompleted(this, new GetBlockCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://electra-ai.com/GetSupplierSetupList", RequestNamespace="http://electra-ai.com/", ResponseNamespace="http://electra-ai.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Data.DataSet GetSupplierSetupList(string companyCode) {
        object[] results = this.Invoke("GetSupplierSetupList", new object[] {
                    companyCode});
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetSupplierSetupList(string companyCode, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetSupplierSetupList", new object[] {
                    companyCode}, callback, asyncState);
    }
    
    /// <remarks/>
    public System.Data.DataSet EndGetSupplierSetupList(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public void GetSupplierSetupListAsync(string companyCode) {
        this.GetSupplierSetupListAsync(companyCode, null);
    }
    
    /// <remarks/>
    public void GetSupplierSetupListAsync(string companyCode, object userState) {
        if ((this.GetSupplierSetupListOperationCompleted == null)) {
            this.GetSupplierSetupListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSupplierSetupListOperationCompleted);
        }
        this.InvokeAsync("GetSupplierSetupList", new object[] {
                    companyCode}, this.GetSupplierSetupListOperationCompleted, userState);
    }
    
    private void OnGetSupplierSetupListOperationCompleted(object arg) {
        if ((this.GetSupplierSetupListCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetSupplierSetupListCompleted(this, new GetSupplierSetupListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://electra-ai.com/ChangePassword", RequestNamespace="http://electra-ai.com/", ResponseNamespace="http://electra-ai.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string ChangePassword(string userID, string passWord) {
        object[] results = this.Invoke("ChangePassword", new object[] {
                    userID,
                    passWord});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginChangePassword(string userID, string passWord, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("ChangePassword", new object[] {
                    userID,
                    passWord}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndChangePassword(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void ChangePasswordAsync(string userID, string passWord) {
        this.ChangePasswordAsync(userID, passWord, null);
    }
    
    /// <remarks/>
    public void ChangePasswordAsync(string userID, string passWord, object userState) {
        if ((this.ChangePasswordOperationCompleted == null)) {
            this.ChangePasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChangePasswordOperationCompleted);
        }
        this.InvokeAsync("ChangePassword", new object[] {
                    userID,
                    passWord}, this.ChangePasswordOperationCompleted, userState);
    }
    
    private void OnChangePasswordOperationCompleted(object arg) {
        if ((this.ChangePasswordCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.ChangePasswordCompleted(this, new ChangePasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://electra-ai.com/ReportStockTakeList", RequestNamespace="http://electra-ai.com/", ResponseNamespace="http://electra-ai.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Data.DataSet ReportStockTakeList(string outlet, string companyCode) {
        object[] results = this.Invoke("ReportStockTakeList", new object[] {
                    outlet,
                    companyCode});
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginReportStockTakeList(string outlet, string companyCode, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("ReportStockTakeList", new object[] {
                    outlet,
                    companyCode}, callback, asyncState);
    }
    
    /// <remarks/>
    public System.Data.DataSet EndReportStockTakeList(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public void ReportStockTakeListAsync(string outlet, string companyCode) {
        this.ReportStockTakeListAsync(outlet, companyCode, null);
    }
    
    /// <remarks/>
    public void ReportStockTakeListAsync(string outlet, string companyCode, object userState) {
        if ((this.ReportStockTakeListOperationCompleted == null)) {
            this.ReportStockTakeListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReportStockTakeListOperationCompleted);
        }
        this.InvokeAsync("ReportStockTakeList", new object[] {
                    outlet,
                    companyCode}, this.ReportStockTakeListOperationCompleted, userState);
    }
    
    private void OnReportStockTakeListOperationCompleted(object arg) {
        if ((this.ReportStockTakeListCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.ReportStockTakeListCompleted(this, new ReportStockTakeListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://electra-ai.com/ReportPurchaseOrder", RequestNamespace="http://electra-ai.com/", ResponseNamespace="http://electra-ai.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Data.DataSet ReportPurchaseOrder(string docEntry, string companyCode) {
        object[] results = this.Invoke("ReportPurchaseOrder", new object[] {
                    docEntry,
                    companyCode});
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginReportPurchaseOrder(string docEntry, string companyCode, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("ReportPurchaseOrder", new object[] {
                    docEntry,
                    companyCode}, callback, asyncState);
    }
    
    /// <remarks/>
    public System.Data.DataSet EndReportPurchaseOrder(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public void ReportPurchaseOrderAsync(string docEntry, string companyCode) {
        this.ReportPurchaseOrderAsync(docEntry, companyCode, null);
    }
    
    /// <remarks/>
    public void ReportPurchaseOrderAsync(string docEntry, string companyCode, object userState) {
        if ((this.ReportPurchaseOrderOperationCompleted == null)) {
            this.ReportPurchaseOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReportPurchaseOrderOperationCompleted);
        }
        this.InvokeAsync("ReportPurchaseOrder", new object[] {
                    docEntry,
                    companyCode}, this.ReportPurchaseOrderOperationCompleted, userState);
    }
    
    private void OnReportPurchaseOrderOperationCompleted(object arg) {
        if ((this.ReportPurchaseOrderCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.ReportPurchaseOrderCompleted(this, new ReportPurchaseOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://electra-ai.com/CopyTemplate", RequestNamespace="http://electra-ai.com/", ResponseNamespace="http://electra-ai.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string CopyTemplate(string fromDB, string toDB, string toDBName, System.Data.DataSet dsOutlet) {
        object[] results = this.Invoke("CopyTemplate", new object[] {
                    fromDB,
                    toDB,
                    toDBName,
                    dsOutlet});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginCopyTemplate(string fromDB, string toDB, string toDBName, System.Data.DataSet dsOutlet, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("CopyTemplate", new object[] {
                    fromDB,
                    toDB,
                    toDBName,
                    dsOutlet}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndCopyTemplate(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void CopyTemplateAsync(string fromDB, string toDB, string toDBName, System.Data.DataSet dsOutlet) {
        this.CopyTemplateAsync(fromDB, toDB, toDBName, dsOutlet, null);
    }
    
    /// <remarks/>
    public void CopyTemplateAsync(string fromDB, string toDB, string toDBName, System.Data.DataSet dsOutlet, object userState) {
        if ((this.CopyTemplateOperationCompleted == null)) {
            this.CopyTemplateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCopyTemplateOperationCompleted);
        }
        this.InvokeAsync("CopyTemplate", new object[] {
                    fromDB,
                    toDB,
                    toDBName,
                    dsOutlet}, this.CopyTemplateOperationCompleted, userState);
    }
    
    private void OnCopyTemplateOperationCompleted(object arg) {
        if ((this.CopyTemplateCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.CopyTemplateCompleted(this, new CopyTemplateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://electra-ai.com/UpdateXMLLog", RequestNamespace="http://electra-ai.com/", ResponseNamespace="http://electra-ai.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string UpdateXMLLog(string UserCode, string passWord, string Company, string ObjType, string XML, string ErrMessage, System.DateTime DateTime, string isUpdate, string key) {
        object[] results = this.Invoke("UpdateXMLLog", new object[] {
                    UserCode,
                    passWord,
                    Company,
                    ObjType,
                    XML,
                    ErrMessage,
                    DateTime,
                    isUpdate,
                    key});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginUpdateXMLLog(string UserCode, string passWord, string Company, string ObjType, string XML, string ErrMessage, System.DateTime DateTime, string isUpdate, string key, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("UpdateXMLLog", new object[] {
                    UserCode,
                    passWord,
                    Company,
                    ObjType,
                    XML,
                    ErrMessage,
                    DateTime,
                    isUpdate,
                    key}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndUpdateXMLLog(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void UpdateXMLLogAsync(string UserCode, string passWord, string Company, string ObjType, string XML, string ErrMessage, System.DateTime DateTime, string isUpdate, string key) {
        this.UpdateXMLLogAsync(UserCode, passWord, Company, ObjType, XML, ErrMessage, DateTime, isUpdate, key, null);
    }
    
    /// <remarks/>
    public void UpdateXMLLogAsync(string UserCode, string passWord, string Company, string ObjType, string XML, string ErrMessage, System.DateTime DateTime, string isUpdate, string key, object userState) {
        if ((this.UpdateXMLLogOperationCompleted == null)) {
            this.UpdateXMLLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateXMLLogOperationCompleted);
        }
        this.InvokeAsync("UpdateXMLLog", new object[] {
                    UserCode,
                    passWord,
                    Company,
                    ObjType,
                    XML,
                    ErrMessage,
                    DateTime,
                    isUpdate,
                    key}, this.UpdateXMLLogOperationCompleted, userState);
    }
    
    private void OnUpdateXMLLogOperationCompleted(object arg) {
        if ((this.UpdateXMLLogCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.UpdateXMLLogCompleted(this, new UpdateXMLLogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://electra-ai.com/InsertPODetailsforEmailCheck", RequestNamespace="http://electra-ai.com/", ResponseNamespace="http://electra-ai.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string InsertPODetailsforEmailCheck(string poNumber, string CardCode, string CardName, string SupplierType, string EmailId) {
        object[] results = this.Invoke("InsertPODetailsforEmailCheck", new object[] {
                    poNumber,
                    CardCode,
                    CardName,
                    SupplierType,
                    EmailId});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginInsertPODetailsforEmailCheck(string poNumber, string CardCode, string CardName, string SupplierType, string EmailId, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("InsertPODetailsforEmailCheck", new object[] {
                    poNumber,
                    CardCode,
                    CardName,
                    SupplierType,
                    EmailId}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndInsertPODetailsforEmailCheck(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void InsertPODetailsforEmailCheckAsync(string poNumber, string CardCode, string CardName, string SupplierType, string EmailId) {
        this.InsertPODetailsforEmailCheckAsync(poNumber, CardCode, CardName, SupplierType, EmailId, null);
    }
    
    /// <remarks/>
    public void InsertPODetailsforEmailCheckAsync(string poNumber, string CardCode, string CardName, string SupplierType, string EmailId, object userState) {
        if ((this.InsertPODetailsforEmailCheckOperationCompleted == null)) {
            this.InsertPODetailsforEmailCheckOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertPODetailsforEmailCheckOperationCompleted);
        }
        this.InvokeAsync("InsertPODetailsforEmailCheck", new object[] {
                    poNumber,
                    CardCode,
                    CardName,
                    SupplierType,
                    EmailId}, this.InsertPODetailsforEmailCheckOperationCompleted, userState);
    }
    
    private void OnInsertPODetailsforEmailCheckOperationCompleted(object arg) {
        if ((this.InsertPODetailsforEmailCheckCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.InsertPODetailsforEmailCheckCompleted(this, new InsertPODetailsforEmailCheckCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    public new void CancelAsync(object userState) {
        base.CancelAsync(userState);
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void UpdateStatusforEmailCheckCompletedEventHandler(object sender, UpdateStatusforEmailCheckCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class UpdateStatusforEmailCheckCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal UpdateStatusforEmailCheckCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void SelectMaxIdofPOCompletedEventHandler(object sender, SelectMaxIdofPOCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class SelectMaxIdofPOCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal SelectMaxIdofPOCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void CreatePOCompletedEventHandler(object sender, CreatePOCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class CreatePOCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal CreatePOCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public System.Data.DataSet Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((System.Data.DataSet)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void UpdateSOCompletedEventHandler(object sender, UpdateSOCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class UpdateSOCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal UpdateSOCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void GetSODataCompletedEventHandler(object sender, GetSODataCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetSODataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetSODataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public System.Data.DataSet Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((System.Data.DataSet)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void GetSODataByIdCompletedEventHandler(object sender, GetSODataByIdCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetSODataByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetSODataByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public System.Data.DataSet Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((System.Data.DataSet)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void SearchSODataCompletedEventHandler(object sender, SearchSODataCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class SearchSODataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal SearchSODataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public System.Data.DataSet Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((System.Data.DataSet)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void CheckCreatedSOSAPCompletedEventHandler(object sender, CheckCreatedSOSAPCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class CheckCreatedSOSAPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal CheckCreatedSOSAPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public System.Data.DataSet Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((System.Data.DataSet)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void GetPrefixCompletedEventHandler(object sender, GetPrefixCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetPrefixCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetPrefixCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public System.Data.DataSet Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((System.Data.DataSet)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void GetPONoCompletedEventHandler(object sender, GetPONoCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetPONoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetPONoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public System.Data.DataSet Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((System.Data.DataSet)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void GetStockYearCompletedEventHandler(object sender, GetStockYearCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetStockYearCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetStockYearCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public System.Data.DataSet Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((System.Data.DataSet)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void GetAllABCompanyCompletedEventHandler(object sender, GetAllABCompanyCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetAllABCompanyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetAllABCompanyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public System.Data.DataSet Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((System.Data.DataSet)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void GetAllABOutletCompletedEventHandler(object sender, GetAllABOutletCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetAllABOutletCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetAllABOutletCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public System.Data.DataSet Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((System.Data.DataSet)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void GetWareHouseAddressCompletedEventHandler(object sender, GetWareHouseAddressCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetWareHouseAddressCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetWareHouseAddressCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public System.Data.DataSet Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((System.Data.DataSet)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void GetABOutletByCompanyCompletedEventHandler(object sender, GetABOutletByCompanyCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetABOutletByCompanyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetABOutletByCompanyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public System.Data.DataSet Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((System.Data.DataSet)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void GetABOutletByDataCompletedEventHandler(object sender, GetABOutletByDataCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetABOutletByDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetABOutletByDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public System.Data.DataSet Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((System.Data.DataSet)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void GetInternalPOCompletedEventHandler(object sender, GetInternalPOCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetInternalPOCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetInternalPOCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public System.Data.DataSet Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((System.Data.DataSet)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void GetCustomerCodeCompletedEventHandler(object sender, GetCustomerCodeCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetCustomerCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetCustomerCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public System.Data.DataSet Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((System.Data.DataSet)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void GetOnlineUserCompletedEventHandler(object sender, GetOnlineUserCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetOnlineUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetOnlineUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public System.Data.DataSet Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((System.Data.DataSet)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void GetAllOutletCompletedEventHandler(object sender, GetAllOutletCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetAllOutletCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetAllOutletCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public System.Data.DataSet Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((System.Data.DataSet)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void GetAllCompanyCompletedEventHandler(object sender, GetAllCompanyCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetAllCompanyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetAllCompanyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public System.Data.DataSet Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((System.Data.DataSet)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void GetCompanyInfoCompletedEventHandler(object sender, GetCompanyInfoCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetCompanyInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetCompanyInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public System.Data.DataSet Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((System.Data.DataSet)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void CheckPermissonDBCompletedEventHandler(object sender, CheckPermissonDBCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class CheckPermissonDBCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal CheckPermissonDBCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public System.Data.DataSet Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((System.Data.DataSet)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void GetLoginCompletedEventHandler(object sender, GetLoginCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetLoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetLoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public System.Data.DataSet Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((System.Data.DataSet)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void GetUserInfoCompletedEventHandler(object sender, GetUserInfoCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetUserInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetUserInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public System.Data.DataSet Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((System.Data.DataSet)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void LoginCompletedEventHandler(object sender, LoginCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class LoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal LoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public bool Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((bool)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void GetOITMCompletedEventHandler(object sender, GetOITMCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetOITMCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetOITMCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public System.Data.DataSet Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((System.Data.DataSet)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void GetOPORCompletedEventHandler(object sender, GetOPORCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetOPORCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetOPORCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public System.Data.DataSet Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((System.Data.DataSet)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void GetOCRDCompletedEventHandler(object sender, GetOCRDCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetOCRDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetOCRDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public System.Data.DataSet Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((System.Data.DataSet)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void GetPeronalContactCompletedEventHandler(object sender, GetPeronalContactCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetPeronalContactCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetPeronalContactCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public System.Data.DataSet Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((System.Data.DataSet)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void CheckWhsCodeCompletedEventHandler(object sender, CheckWhsCodeCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class CheckWhsCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal CheckWhsCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public bool Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((bool)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void CheckProcessPOCompletedEventHandler(object sender, CheckProcessPOCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class CheckProcessPOCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal CheckProcessPOCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public bool Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((bool)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void SearchPOCompletedEventHandler(object sender, SearchPOCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class SearchPOCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal SearchPOCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public System.Data.DataSet Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((System.Data.DataSet)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void GRPOSearchCompletedEventHandler(object sender, GRPOSearchCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GRPOSearchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GRPOSearchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public System.Data.DataSet Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((System.Data.DataSet)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void DraftStockTakeCompletedEventHandler(object sender, DraftStockTakeCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class DraftStockTakeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal DraftStockTakeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public System.Data.DataSet Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((System.Data.DataSet)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void DraftPOCompletedEventHandler(object sender, DraftPOCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class DraftPOCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal DraftPOCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public System.Data.DataSet Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((System.Data.DataSet)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void GetOutStandingPOCompletedEventHandler(object sender, GetOutStandingPOCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetOutStandingPOCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetOutStandingPOCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public System.Data.DataSet Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((System.Data.DataSet)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void CheckSlpNameCompletedEventHandler(object sender, CheckSlpNameCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class CheckSlpNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal CheckSlpNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public System.Data.DataSet Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((System.Data.DataSet)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void GetGRPOCompletedEventHandler(object sender, GetGRPOCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetGRPOCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetGRPOCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public System.Data.DataSet Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((System.Data.DataSet)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void CheckOnHandCompletedEventHandler(object sender, CheckOnHandCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class CheckOnHandCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal CheckOnHandCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public System.Data.DataSet Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((System.Data.DataSet)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void GetItemStockTakeCompletedEventHandler(object sender, GetItemStockTakeCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetItemStockTakeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetItemStockTakeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public System.Data.DataSet Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((System.Data.DataSet)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void GetItemCumulativeCompletedEventHandler(object sender, GetItemCumulativeCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetItemCumulativeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetItemCumulativeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public System.Data.DataSet Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((System.Data.DataSet)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void GetStockTakeListCompletedEventHandler(object sender, GetStockTakeListCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetStockTakeListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetStockTakeListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public System.Data.DataSet Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((System.Data.DataSet)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void GetStockTakeDraftDetailCompletedEventHandler(object sender, GetStockTakeDraftDetailCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetStockTakeDraftDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetStockTakeDraftDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public System.Data.DataSet Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((System.Data.DataSet)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void GetStockTakeDetailCompletedEventHandler(object sender, GetStockTakeDetailCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetStockTakeDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetStockTakeDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public System.Data.DataSet Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((System.Data.DataSet)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void GetLastPurchasePriceCompletedEventHandler(object sender, GetLastPurchasePriceCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetLastPurchasePriceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetLastPurchasePriceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public System.Data.DataSet Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((System.Data.DataSet)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void GetLogoCompletedEventHandler(object sender, GetLogoCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetLogoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetLogoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void GetDefaultWareHouseCompletedEventHandler(object sender, GetDefaultWareHouseCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetDefaultWareHouseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetDefaultWareHouseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public System.Data.DataSet Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((System.Data.DataSet)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void GetItemCompletedEventHandler(object sender, GetItemCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public System.Data.DataSet Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((System.Data.DataSet)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void GetAllItemCompletedEventHandler(object sender, GetAllItemCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetAllItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetAllItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public System.Data.DataSet Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((System.Data.DataSet)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void GetItemEditCompletedEventHandler(object sender, GetItemEditCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetItemEditCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetItemEditCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public System.Data.DataSet Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((System.Data.DataSet)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void CopyToGRPOCompletedEventHandler(object sender, CopyToGRPOCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class CopyToGRPOCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal CopyToGRPOCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public System.Data.DataSet Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((System.Data.DataSet)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void GetGRPOUpdateCompletedEventHandler(object sender, GetGRPOUpdateCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetGRPOUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetGRPOUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public System.Data.DataSet Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((System.Data.DataSet)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void GetPODataUpdateCompletedEventHandler(object sender, GetPODataUpdateCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetPODataUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetPODataUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public System.Data.DataSet Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((System.Data.DataSet)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void GetPODraftUpdateCompletedEventHandler(object sender, GetPODraftUpdateCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetPODraftUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetPODraftUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public System.Data.DataSet Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((System.Data.DataSet)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void GetOutletCalendarCompletedEventHandler(object sender, GetOutletCalendarCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetOutletCalendarCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetOutletCalendarCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public System.Data.DataSet Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((System.Data.DataSet)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void GetOutletAmountCompletedEventHandler(object sender, GetOutletAmountCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetOutletAmountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetOutletAmountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public System.Data.DataSet Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((System.Data.DataSet)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void GetOutletSupplierCompletedEventHandler(object sender, GetOutletSupplierCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetOutletSupplierCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetOutletSupplierCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public System.Data.DataSet Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((System.Data.DataSet)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void GetItemOutletSetupCompletedEventHandler(object sender, GetItemOutletSetupCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetItemOutletSetupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetItemOutletSetupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public System.Data.DataSet Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((System.Data.DataSet)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void GetSupplierOutletSetupCompletedEventHandler(object sender, GetSupplierOutletSetupCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetSupplierOutletSetupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetSupplierOutletSetupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public System.Data.DataSet Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((System.Data.DataSet)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void GetSupplierItemSetupCompletedEventHandler(object sender, GetSupplierItemSetupCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetSupplierItemSetupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetSupplierItemSetupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public System.Data.DataSet Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((System.Data.DataSet)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void GetOutletItemListCompletedEventHandler(object sender, GetOutletItemListCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetOutletItemListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetOutletItemListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public System.Data.DataSet Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((System.Data.DataSet)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void CheckAddPOCompletedEventHandler(object sender, CheckAddPOCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class CheckAddPOCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal CheckAddPOCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void GetSupplierAmountCompletedEventHandler(object sender, GetSupplierAmountCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetSupplierAmountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetSupplierAmountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public System.Data.DataSet Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((System.Data.DataSet)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void UpdateOutletCalendarCompletedEventHandler(object sender, UpdateOutletCalendarCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class UpdateOutletCalendarCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal UpdateOutletCalendarCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void UpdateOutletOrderAmountCompletedEventHandler(object sender, UpdateOutletOrderAmountCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class UpdateOutletOrderAmountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal UpdateOutletOrderAmountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void UpdateOutletItemListCompletedEventHandler(object sender, UpdateOutletItemListCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class UpdateOutletItemListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal UpdateOutletItemListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void InsertABDeliveryOrderCompletedEventHandler(object sender, InsertABDeliveryOrderCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class InsertABDeliveryOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal InsertABDeliveryOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void DeleteVendorSetupCompletedEventHandler(object sender, DeleteVendorSetupCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class DeleteVendorSetupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal DeleteVendorSetupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void GetPOByDocEntryCompletedEventHandler(object sender, GetPOByDocEntryCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetPOByDocEntryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetPOByDocEntryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public System.Data.DataSet Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((System.Data.DataSet)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void GetRouteHoldingCompletedEventHandler(object sender, GetRouteHoldingCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetRouteHoldingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetRouteHoldingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public System.Data.DataSet Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((System.Data.DataSet)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void GetDriverNoCompletedEventHandler(object sender, GetDriverNoCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetDriverNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetDriverNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public System.Data.DataSet Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((System.Data.DataSet)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void GetBlockCompletedEventHandler(object sender, GetBlockCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetBlockCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetBlockCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public System.Data.DataSet Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((System.Data.DataSet)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void GetSupplierSetupListCompletedEventHandler(object sender, GetSupplierSetupListCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetSupplierSetupListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetSupplierSetupListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public System.Data.DataSet Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((System.Data.DataSet)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void ChangePasswordCompletedEventHandler(object sender, ChangePasswordCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class ChangePasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal ChangePasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void ReportStockTakeListCompletedEventHandler(object sender, ReportStockTakeListCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class ReportStockTakeListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal ReportStockTakeListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public System.Data.DataSet Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((System.Data.DataSet)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void ReportPurchaseOrderCompletedEventHandler(object sender, ReportPurchaseOrderCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class ReportPurchaseOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal ReportPurchaseOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public System.Data.DataSet Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((System.Data.DataSet)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void CopyTemplateCompletedEventHandler(object sender, CopyTemplateCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class CopyTemplateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal CopyTemplateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void UpdateXMLLogCompletedEventHandler(object sender, UpdateXMLLogCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class UpdateXMLLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal UpdateXMLLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void InsertPODetailsforEmailCheckCompletedEventHandler(object sender, InsertPODetailsforEmailCheckCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class InsertPODetailsforEmailCheckCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal InsertPODetailsforEmailCheckCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}
